# -*- coding: mbcs -*-
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=60.0)
mdb.models['Model-1'].sketches['__profile__'].sketchOptions.setValues(
    viewStyle=AXISYM)
mdb.models['Model-1'].sketches['__profile__'].ConstructionLine(point1=(0.0, 
    -30.0), point2=(0.0, 30.0))
mdb.models['Model-1'].sketches['__profile__'].FixedConstraint(entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2])
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(5.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(0.0, 5.0))
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(5.145, 0.0))
mdb.models['Model-1'].sketches['__profile__'].linearPattern(angle1=0.0, angle2=
    90.0, geomList=(), number1=4, number2=1, spacing1=10.29, spacing2=6.0, 
    vertexList=(mdb.models['Model-1'].sketches['__profile__'].vertices[0], 
    mdb.models['Model-1'].sketches['__profile__'].vertices[1]))
mdb.models['Model-1'].sketches['__profile__'].linearPattern(angle1=180.0, 
    angle2=90.0, geomList=(), number1=3, number2=1, spacing1=10.29, spacing2=
    6.0, vertexList=(mdb.models['Model-1'].sketches['__profile__'].vertices[0], 
    mdb.models['Model-1'].sketches['__profile__'].vertices[1]))
mdb.models['Model-1'].sketches['__profile__'].Spline(points=((-20.58, 5.0), (
    -15.435, 0.0), (-10.29, 5.0), (-5.145, 0.0), (0.0, 5.0), (5.145, 0.0), (
    10.29, 5.0), (15.435, 0.0), (20.58, 5.0), (25.725, 0.0), (30.87, 5.0), (
    36.015, 0.0)))
mdb.models['Model-1'].sketches['__profile__'].ConstructionLine(angle=90.0, 
    point1=(20.58, 5.0))
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[4], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4])
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[4])
mdb.models['Model-1'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3], point1=(
    -10.1195402145386, 4.88602352142334))
mdb.models['Model-1'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5], point1=(
    22.958309173584, 3.05432891845703))
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].ConstructionLine(angle=90.0, 
    point1=(25.725, 0.0))
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[5], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4])
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[4])
mdb.models['Model-1'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3], point1=(
    -15.6966199874878, -0.0788354873657227))
mdb.models['Model-1'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5], point1=(
    27.2372779846191, 0.45139217376709))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(25.7249997965636, 
    0.0), point2=(40.5, 0.0))
mdb.models['Model-1'].Part(dimensionality=AXISYMMETRIC, name='Die', type=
    DISCRETE_RIGID_SURFACE)
mdb.models['Model-1'].parts['Die'].BaseWire(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].parts['Die'].setValues(geometryRefinement=FINE)
mdb.models['Model-1'].parts['Die'].setValues(geometryRefinement=EXTRA_FINE)
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=60.0)
mdb.models['Model-1'].sketches['__profile__'].sketchOptions.setValues(
    viewStyle=AXISYM)
mdb.models['Model-1'].sketches['__profile__'].ConstructionLine(point1=(0.0, 
    -30.0), point2=(0.0, 30.0))
mdb.models['Model-1'].sketches['__profile__'].FixedConstraint(entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2])
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.0, 0.0), 
    point2=(3.25, 6.75))
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.0, 0.0), 
    point2=(0.02048, 0.01))
mdb.models['Model-1'].Part(dimensionality=AXISYMMETRIC, name='Blank', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Blank'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
del mdb.models['Model-1'].parts['Die']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=60.0)
mdb.models['Model-1'].sketches['__profile__'].sketchOptions.setValues(
    viewStyle=AXISYM)
mdb.models['Model-1'].sketches['__profile__'].ConstructionLine(point1=(0.0, 
    -30.0), point2=(0.0, 30.0))
mdb.models['Model-1'].sketches['__profile__'].FixedConstraint(entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2])
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(0.0, 0.005))
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(0.005, 0.0))
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(0.005145, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(0.0, 0.005))
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(0.0, 0.005))
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(0.005145, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(0.005145, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(0.0, 0.005))
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(0.00383678870275617, 
    0.00142865860834718))
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].linearPattern(angle1=0.0, angle2=
    90.0, geomList=(), number1=4, number2=1, spacing1=0.01029, spacing2=6.0, 
    vertexList=(mdb.models['Model-1'].sketches['__profile__'].vertices[0], 
    mdb.models['Model-1'].sketches['__profile__'].vertices[1]))
mdb.models['Model-1'].sketches['__profile__'].linearPattern(angle1=180.0, 
    angle2=90.0, geomList=(), number1=3, number2=1, spacing1=0.01029, spacing2=
    6.0, vertexList=(mdb.models['Model-1'].sketches['__profile__'].vertices[0], 
    mdb.models['Model-1'].sketches['__profile__'].vertices[1]))
mdb.models['Model-1'].sketches['__profile__'].Spline(points=((-0.02058, 0.005), 
    (-0.015435, 0.0), (-0.01029, 0.005), (-0.005145, 0.0), (0.0, 0.005), (
    0.005145, 0.0), (0.01029, 0.005), (0.015435, 0.0), (0.02058, 0.005), (
    0.025725, 0.0), (0.03087, 0.005), (0.036015, 0.0)))
mdb.models['Model-1'].sketches['__profile__'].ConstructionLine(angle=90.0, 
    point1=(0.025725, 0.0))
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[10], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4])
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[4])
mdb.models['Model-1'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3], point1=(
    -0.018725547939539, 0.00233129085972905))
mdb.models['Model-1'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5], point1=(
    0.0285834707319736, 0.00170465791597962))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0257249993162132, 
    0.0), point2=(0.0520044378936291, 0.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[7])
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[33], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[6])
mdb.models['Model-1'].Part(dimensionality=AXISYMMETRIC, name='Die', type=
    DISCRETE_RIGID_SURFACE)
mdb.models['Model-1'].parts['Die'].BaseWire(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Steel')
mdb.models['Model-1'].materials['Steel'].Density(table=((7800.0, ), ))
mdb.models['Model-1'].materials['Steel'].Elastic(table=((202900000000.0, 0.3), 
    ))
mdb.models['Model-1'].materials['Steel'].Plastic(table=((102.9, 0.0), (3131.9, 
    10.0)))
# Save by faezeh on 2018_06_01-01.48.34; build 6.14-1 2014_06_04-15.11.02 134264
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].HomogeneousSolidSection(material='Steel', name=
    'Section-1', thickness=None)
mdb.models['Model-1'].parts['Blank'].Set(faces=
    mdb.models['Model-1'].parts['Blank'].faces.getSequenceFromMask(('[#1 ]', ), 
    ), name='Set-1')
mdb.models['Model-1'].parts['Blank'].SectionAssignment(offset=0.0, offsetField=
    '', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Blank'].sets['Set-1'], sectionName='Section-1'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].rootAssembly.DatumCsysByThreePoints(coordSysType=
    CYLINDRICAL, origin=(0.0, 0.0, 0.0), point1=(1.0, 0.0, 0.0), point2=(0.0, 
    0.0, -1.0))
mdb.models['Model-1'].rootAssembly.Instance(dependent=OFF, name='Die-1', part=
    mdb.models['Model-1'].parts['Die'])
mdb.models['Model-1'].rootAssembly.Instance(dependent=OFF, name='Blank-1', 
    part=mdb.models['Model-1'].parts['Blank'])
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Die-1', ), vector=(
    0.0, 0.01, 0.0))
mdb.models['Model-1'].ExplicitDynamicsStep(name='Step-1', previous='Initial', 
    timePeriod=0.0038)
mdb.models['Model-1'].ContactProperty('fricless')
mdb.models['Model-1'].interactionProperties['fricless'].TangentialBehavior(
    formulation=FRICTIONLESS)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-1', side2Edges=
    mdb.models['Model-1'].rootAssembly.instances['Die-1'].edges.getSequenceFromMask(
    ('[#3 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-1', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Blank-1'].edges.getSequenceFromMask(
    ('[#6 ]', ), ))
mdb.models['Model-1'].SurfaceToSurfaceContactExp(clearanceRegion=None, 
    createStepName='Step-1', datumAxis=None, initialClearance=OMIT, 
    interactionProperty='fricless', master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-1'], 
    mechanicalConstraint=KINEMATIC, name='Int-1', slave=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-1'], sliding=FINITE)
mdb.models['Model-1'].rootAssembly.Set(edges=
    mdb.models['Model-1'].rootAssembly.instances['Die-1'].edges.getSequenceFromMask(
    ('[#3 ]', ), ), name='Set-1')
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'Died-fix', region=mdb.models['Model-1'].rootAssembly.sets['Set-1'], u1=0.0
    , u2=UNSET, ur3=0.0)
mdb.models['Model-1'].rootAssembly.Set(edges=
    mdb.models['Model-1'].rootAssembly.instances['Die-1'].edges.getSequenceFromMask(
    ('[#3 ]', ), ), name='Set-2')
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='Initial', 
    distributionType=UNIFORM, fieldName='', localCsys=None, name='Die-fix', 
    region=mdb.models['Model-1'].rootAssembly.sets['Set-2'], u1=SET, u2=UNSET, 
    ur3=SET)
del mdb.models['Model-1'].boundaryConditions['Died-fix']
mdb.models['Model-1'].SmoothStepAmplitude(data=((0.0, 0.0), (0.0038, 1.0)), 
    name='Amp-1', timeSpan=STEP)
mdb.models['Model-1'].DisplacementBC(amplitude='Amp-1', createStepName='Step-1'
    , distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'Die-disp', region=Region(
    edges=mdb.models['Model-1'].rootAssembly.instances['Die-1'].edges.getSequenceFromMask(
    mask=('[#3 ]', ), )), u1=UNSET, u2=-0.0076, ur3=UNSET)
mdb.models['Model-1'].AdaptiveMeshControl(name='Ada-1')
mdb.models['Model-1'].steps['Step-1'].AdaptiveMeshDomain(controls='Ada-1', 
    region=Region(
    faces=mdb.models['Model-1'].rootAssembly.instances['Blank-1'].faces.getSequenceFromMask(
    mask=('[#1 ]', ), )))
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['Blank-1'], ), size=0.002)
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['Blank-1'], ), size=0.0005)
mdb.models['Model-1'].rootAssembly.setElementType(elemTypes=(ElemType(
    elemCode=CAX4R, elemLibrary=STANDARD, secondOrderAccuracy=OFF, 
    hourglassControl=DEFAULT, distortionControl=DEFAULT), ElemType(
    elemCode=CAX3, elemLibrary=STANDARD)), regions=(
    mdb.models['Model-1'].rootAssembly.instances['Blank-1'].faces.getSequenceFromMask(
    ('[#1 ]', ), ), ))
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['Blank-1'], ))
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=
    mdb.models['Model-1'].rootAssembly.instances['Blank-1'].faces.getSequenceFromMask(
    ('[#1 ]', ), ))
mdb.models['Model-1'].rootAssembly.seedEdgeBySize(constraint=FINER, 
    deviationFactor=0.1, edges=
    mdb.models['Model-1'].rootAssembly.instances['Blank-1'].edges.getSequenceFromMask(
    ('[#2 ]', ), ), minSizeFactor=0.1, size=0.001)
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['Blank-1'], ))
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['Die-1'], ), size=0.0005)
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=
    mdb.models['Model-1'].rootAssembly.instances['Blank-1'].faces.getSequenceFromMask(
    ('[#1 ]', ), ))
mdb.models['Model-1'].rootAssembly.seedEdgeBySize(constraint=FINER, 
    deviationFactor=0.1, edges=
    mdb.models['Model-1'].rootAssembly.instances['Blank-1'].edges.getSequenceFromMask(
    ('[#2 ]', ), ), minSizeFactor=0.1, size=0.002)
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['Die-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Blank-1']))
mdb.Job(activateLoadBalancing=False, atTime=None, contactPrint=OFF, 
    description='', echoPrint=OFF, explicitPrecision=SINGLE, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-492', nodalOutputPrecision=SINGLE, 
    numCpus=1, numDomains=1, parallelizationMethodExplicit=DOMAIN, queue=None, 
    resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=
    0, waitMinutes=0)
mdb.models['Model-1'].parts['Die'].ReferencePoint(point=
    mdb.models['Model-1'].parts['Die'].vertices[0])
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].boundaryConditions['Die-disp'].setValues(region=Region(
    referencePoints=(
    mdb.models['Model-1'].rootAssembly.instances['Die-1'].referencePoints[2], 
    )))
mdb.models['Model-1'].boundaryConditions['Die-fix'].setValues(region=Region(
    referencePoints=(
    mdb.models['Model-1'].rootAssembly.instances['Die-1'].referencePoints[2], 
    )))
mdb.jobs['Job-492'].submit(consistencyChecking=OFF)
mdb.jobs['Job-492']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 0, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 1940, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 1 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'The strain to cause first yield for material STEEL is too small. This may cause numerical problems during the material constitutive calculations. It is highly recommended to modify the material data by either increasing the yield stress or decreasing the elastic stiffness.', 
    'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 8364, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 5.13248679112621e-08, 'stepTime': 0.0, 
    'totalEnergy': 0.0, 'cpuTime': 0.0, 'jobName': 'Job-492', 'step': 1, 
    'increment': 0, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.000190003745956346, 
    'stableTimeIncrement': 5.13248679112621e-08, 
    'stepTime': 0.000190003745956346, 'totalEnergy': 0.0, 'cpuTime': 0.5, 
    'jobName': 'Job-492', 'step': 1, 'increment': 3702, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.000380043231416494, 
    'stableTimeIncrement': 6.32331307315326e-08, 
    'stepTime': 0.000380043231416494, 'totalEnergy': 1.10997852971195e-05, 
    'cpuTime': 1.0, 'jobName': 'Job-492', 'step': 1, 'increment': 6940, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.000484669610159472})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.000570023257751018, 
    'stableTimeIncrement': 3.72314623575676e-08, 
    'stepTime': 0.000570023257751018, 'totalEnergy': 0.004317422863096, 
    'cpuTime': 1.70000004768372, 'jobName': 'Job-492', 'step': 1, 
    'increment': 10794, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.00451216334477067})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.000760022085160017, 
    'stableTimeIncrement': 2.92394073397872e-08, 
    'stepTime': 0.000760022085160017, 'totalEnergy': 0.0122643448412418, 
    'cpuTime': 2.90000009536743, 'jobName': 'Job-492', 'step': 1, 
    'increment': 16642, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0153518225997686})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.000950012821704149, 
    'stableTimeIncrement': 3.07506482499775e-08, 
    'stepTime': 0.000950012821704149, 'totalEnergy': 0.0351387523114681, 
    'cpuTime': 4.0, 'jobName': 'Job-492', 'step': 1, 'increment': 22955, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0378962308168411})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.00114002148620784, 
    'stableTimeIncrement': 3.2426260787588e-08, 
    'stepTime': 0.00114002148620784, 'totalEnergy': 0.046221848577261, 
    'cpuTime': 5.09999990463257, 'jobName': 'Job-492', 'step': 1, 
    'increment': 28987, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0791543945670128})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.00133001955691725, 
    'stableTimeIncrement': 3.27893552309888e-08, 
    'stepTime': 0.00133001955691725, 'totalEnergy': 0.0564438365399837, 
    'cpuTime': 6.19999980926514, 'jobName': 'Job-492', 'step': 1, 
    'increment': 34791, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.137946784496307})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.00152002833783627, 
    'stableTimeIncrement': 3.80830584845171e-08, 
    'stepTime': 0.00152002833783627, 'totalEnergy': 0.0789839252829552, 
    'cpuTime': 7.40000009536743, 'jobName': 'Job-492', 'step': 1, 
    'increment': 40575, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.20704959332943})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.00171003059949726, 
    'stableTimeIncrement': 3.96831651983121e-08, 
    'stepTime': 0.00171003059949726, 'totalEnergy': 0.0954813286662102, 
    'cpuTime': 8.39999961853027, 'jobName': 'Job-492', 'step': 1, 
    'increment': 45395, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.262031853199005})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.00190000829752535, 
    'stableTimeIncrement': 3.77239857130007e-08, 
    'stepTime': 0.00190000829752535, 'totalEnergy': 0.11911802738905, 
    'cpuTime': 9.5, 'jobName': 'Job-492', 'step': 1, 'increment': 50523, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.310079365968704})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.00209003244526684, 
    'stableTimeIncrement': 3.76695226123047e-08, 
    'stepTime': 0.00209003244526684, 'totalEnergy': 0.2183688133955, 
    'cpuTime': 10.5, 'jobName': 'Job-492', 'step': 1, 'increment': 55557, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.581667482852936})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'The elements contained in element set ErrElemExcessDistortion-Step1 have distorted excessively.', 
    'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'There is only one excessively distorted element', 
    'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.00226065912283957, 
    'stableTimeIncrement': 9.9999998245167e-15, 
    'stepTime': 0.00226065912283957, 'totalEnergy': 1385.97766113281, 
    'cpuTime': 11.5, 'jobName': 'Job-492', 'step': 1, 'increment': 60502, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 501.857757568359})
mdb.jobs['Job-492']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'The elements contained in element set ErrElemExcessDistortion-Step1 have distorted excessively.', 
    'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(ABORTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-492'})
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='Initial', 
    distributionType=UNIFORM, fieldName='', localCsys=None, name='Blank', 
    region=Region(
    edges=mdb.models['Model-1'].rootAssembly.instances['Blank-1'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), )), u1=UNSET, u2=SET, ur3=UNSET)
mdb.jobs['Job-492'].submit(consistencyChecking=OFF)
mdb.jobs['Job-492']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 0, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 8356, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 1 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'The strain to cause first yield for material STEEL is too small. This may cause numerical problems during the material constitutive calculations. It is highly recommended to modify the material data by either increasing the yield stress or decreasing the elastic stiffness.', 
    'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Boundary conditions are defined at the nodes contained in node set WarnNodeBcIntersectKinCon. In addition the nodes are also part of a surface involved in kinematic contact. The kinematic contact constraint will be overridden by the boundary conditions in case of a conflict. Penalty contact may be used instead.', 
    'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 984, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 5.13248679112621e-08, 'stepTime': 0.0, 
    'totalEnergy': 0.0, 'cpuTime': 0.0, 'jobName': 'Job-492', 'step': 1, 
    'increment': 0, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.000190003745956346, 
    'stableTimeIncrement': 5.13248679112621e-08, 
    'stepTime': 0.000190003745956346, 'totalEnergy': 0.0, 'cpuTime': 0.5, 
    'jobName': 'Job-492', 'step': 1, 'increment': 3702, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.000380061246687546, 
    'stableTimeIncrement': 6.3209633083261e-08, 
    'stepTime': 0.000380061246687546, 'totalEnergy': 0.00050605769501999, 
    'cpuTime': 1.10000002384186, 'jobName': 'Job-492', 'step': 1, 
    'increment': 6926, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.000747727288398892})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.000570012722164392, 
    'stableTimeIncrement': 6.33434851238235e-08, 
    'stepTime': 0.000570012722164392, 'totalEnergy': 0.00495048006996512, 
    'cpuTime': 1.60000002384186, 'jobName': 'Job-492', 'step': 1, 
    'increment': 9933, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.00501438044011593})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.000760027847718447, 
    'stableTimeIncrement': 6.51391758310638e-08, 
    'stepTime': 0.000760027847718447, 'totalEnergy': 0.0133294677361846, 
    'cpuTime': 2.09999990463257, 'jobName': 'Job-492', 'step': 1, 
    'increment': 12891, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0178304594010115})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.000950001704040915, 
    'stableTimeIncrement': 6.30465279982673e-08, 
    'stepTime': 0.000950001704040915, 'totalEnergy': 0.0179695207625628, 
    'cpuTime': 2.59999990463257, 'jobName': 'Job-492', 'step': 1, 
    'increment': 15835, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0424454510211945})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.00114003650378436, 
    'stableTimeIncrement': 6.29553227327051e-08, 
    'stepTime': 0.00114003650378436, 'totalEnergy': 0.0295775886625052, 
    'cpuTime': 3.20000004768372, 'jobName': 'Job-492', 'step': 1, 
    'increment': 18843, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0888155251741409})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.00133005483075976, 
    'stableTimeIncrement': 6.1597503986377e-08, 
    'stepTime': 0.00133005483075976, 'totalEnergy': 0.0437924452126026, 
    'cpuTime': 3.70000004768372, 'jobName': 'Job-492', 'step': 1, 
    'increment': 21884, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.165812134742737})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.00152004801202565, 
    'stableTimeIncrement': 6.08509935773327e-08, 
    'stepTime': 0.00152004801202565, 'totalEnergy': 0.0582012981176376, 
    'cpuTime': 4.30000019073486, 'jobName': 'Job-492', 'step': 1, 
    'increment': 24991, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.267154544591904})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.00171005039010197, 
    'stableTimeIncrement': 6.0135789681226e-08, 
    'stepTime': 0.00171005039010197, 'totalEnergy': 0.0866469889879227, 
    'cpuTime': 4.90000009536743, 'jobName': 'Job-492', 'step': 1, 
    'increment': 28133, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.401247084140778})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.00190003565512598, 
    'stableTimeIncrement': 5.54824772791562e-08, 
    'stepTime': 0.00190003565512598, 'totalEnergy': 0.12309592217207, 
    'cpuTime': 5.5, 'jobName': 'Job-492', 'step': 1, 'increment': 31421, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.569685578346252})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.00209002383053303, 
    'stableTimeIncrement': 4.48496635385709e-08, 
    'stepTime': 0.00209002383053303, 'totalEnergy': 0.275813400745392, 
    'cpuTime': 6.19999980926514, 'jobName': 'Job-492', 'step': 1, 
    'increment': 35226, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1.13503038883209})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.00228000828064978, 
    'stableTimeIncrement': 3.95272792275136e-08, 
    'stepTime': 0.00228000828064978, 'totalEnergy': 0.519292950630188, 
    'cpuTime': 7.09999990463257, 'jobName': 'Job-492', 'step': 1, 
    'increment': 39856, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1.4159152507782})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.00247000670060515, 
    'stableTimeIncrement': 3.11912167205719e-08, 
    'stepTime': 0.00247000670060515, 'totalEnergy': 0.921079039573669, 
    'cpuTime': 8.19999980926514, 'jobName': 'Job-492', 'step': 1, 
    'increment': 45292, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1.63414239883423})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.00266000535339117, 
    'stableTimeIncrement': 2.59715839945329e-08, 
    'stepTime': 0.00266000535339117, 'totalEnergy': 1.33202254772186, 
    'cpuTime': 9.5, 'jobName': 'Job-492', 'step': 1, 'increment': 51890, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 1.74101853370667})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.00285001285374165, 
    'stableTimeIncrement': 1.75050480777372e-08, 
    'stepTime': 0.00285001285374165, 'totalEnergy': 1.91028118133545, 
    'cpuTime': 11.3999996185303, 'jobName': 'Job-492', 'step': 1, 
    'increment': 61266, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1.82437431812286})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.00304000847972929, 
    'stableTimeIncrement': 1.95126403923496e-08, 
    'stepTime': 0.00304000847972929, 'totalEnergy': 2.60874223709106, 
    'cpuTime': 13.3999996185303, 'jobName': 'Job-492', 'step': 1, 
    'increment': 71442, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1.76867818832397})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.00323000061325729, 
    'stableTimeIncrement': 2.13076365440656e-08, 
    'stepTime': 0.00323000061325729, 'totalEnergy': 2.89213919639587, 
    'cpuTime': 15.5, 'jobName': 'Job-492', 'step': 1, 'increment': 81275, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 1.71476316452026})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.00342000741511583, 
    'stableTimeIncrement': 2.17138804714523e-08, 
    'stepTime': 0.00342000741511583, 'totalEnergy': 2.88271617889404, 
    'cpuTime': 17.2999992370605, 'jobName': 'Job-492', 'step': 1, 
    'increment': 89755, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1.72410559654236})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 18, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.00361000187695026, 
    'stableTimeIncrement': 1.86422823844623e-08, 
    'stepTime': 0.00361000187695026, 'totalEnergy': 2.83922600746155, 
    'cpuTime': 19.2000007629395, 'jobName': 'Job-492', 'step': 1, 
    'increment': 99091, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1.69462060928345})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 19, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.00380000006407499, 
    'stableTimeIncrement': 1.62052806729207e-08, 
    'stepTime': 0.00380000006407499, 'totalEnergy': 2.77133798599243, 
    'cpuTime': 21.3999996185303, 'jobName': 'Job-492', 'step': 1, 
    'increment': 110083, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1.67367231845856})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 20, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(JOB_COMPLETED, {
    'time': 'Fri Jun 01 05:14:15 2018', 'jobName': 'Job-492'})
del mdb.models['Model-1'].boundaryConditions['Die-fix']
del mdb.models['Model-1'].boundaryConditions['Blank']
mdb.models['Model-1'].YsymmBC(createStepName='Initial', localCsys=None, name=
    'Blank', region=Region(
    edges=mdb.models['Model-1'].rootAssembly.instances['Blank-1'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), )))
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='Initial', 
    distributionType=UNIFORM, fieldName='', localCsys=None, name='Die-fix', 
    region=Region(referencePoints=(
    mdb.models['Model-1'].rootAssembly.instances['Die-1'].referencePoints[2], 
    )), u1=SET, u2=UNSET, ur3=SET)
# Save by faezeh on 2018_06_01-05.17.01; build 6.14-1 2014_06_04-15.11.02 134264
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Blank'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['Blank'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Blank'].features['Shell planar-1'])
mdb.models['Model-1'].sketches['__edit__'].HorizontalDimension(textPoint=(
    0.0108141349628568, 0.00891595706343651), value=0.02058, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2])
mdb.models['Model-1'].parts['Blank'].features['Shell planar-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Blank'].regenerate()
mdb.models['Model-1'].parts['Blank'].regenerate()
mdb.models['Model-1'].materials['Steel'].plastic.setValues(table=((102900000.0, 
    0.0), (3131900000.0, 10.0)))
mdb.models['Model-1'].rootAssembly.regenerate()
del mdb.models['Model-1'].interactions['Int-1']
mdb.models['Model-1'].SurfaceToSurfaceContactExp(clearanceRegion=None, 
    createStepName='Initial', datumAxis=None, initialClearance=OMIT, 
    interactionProperty='fricless', master=Region(
    side2Edges=mdb.models['Model-1'].rootAssembly.instances['Die-1'].edges.getSequenceFromMask(
    mask=('[#3 ]', ), )), mechanicalConstraint=KINEMATIC, name='Int-1', slave=
    Region(
    side1Edges=mdb.models['Model-1'].rootAssembly.instances['Blank-1'].edges.getSequenceFromMask(
    mask=('[#6 ]', ), )), sliding=FINITE)
mdb.models['Model-1'].parts['Blank'].setValues(geometryRefinement=EXTRA_FINE)
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].parts['Die'].setValues(geometryRefinement=EXTRA_FINE)
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['Job-492'].submit(consistencyChecking=OFF)
mdb.jobs['Job-492']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 0, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 3224, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 1 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Boundary conditions are defined at the nodes contained in node set WarnNodeBcIntersectKinCon. In addition the nodes are also part of a surface involved in kinematic contact. The kinematic contact constraint will be overridden by the boundary conditions in case of a conflict. Penalty contact may be used instead.', 
    'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 1392, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 5.13248679112621e-08, 'stepTime': 0.0, 
    'totalEnergy': 0.0, 'cpuTime': 0.0, 'jobName': 'Job-492', 'step': 1, 
    'increment': 0, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.000190003745956346, 
    'stableTimeIncrement': 5.13248679112621e-08, 
    'stepTime': 0.000190003745956346, 'totalEnergy': 0.0, 'cpuTime': 0.5, 
    'jobName': 'Job-492', 'step': 1, 'increment': 3702, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.00038004934322089, 
    'stableTimeIncrement': 5.13236670940387e-08, 
    'stepTime': 0.00038004934322089, 'totalEnergy': 0.0827538222074509, 
    'cpuTime': 1.10000002384186, 'jobName': 'Job-492', 'step': 1, 
    'increment': 7405, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0013865529326722})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.000570004573091865, 
    'stableTimeIncrement': 3.32681580061944e-08, 
    'stepTime': 0.000570004573091865, 'totalEnergy': 5.6257004737854, 
    'cpuTime': 1.79999995231628, 'jobName': 'Job-492', 'step': 1, 
    'increment': 11886, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0320415683090687})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.000760005379561335, 
    'stableTimeIncrement': 2.6478685910547e-08, 
    'stepTime': 0.000760005379561335, 'totalEnergy': 13.7482576370239, 
    'cpuTime': 2.90000009536743, 'jobName': 'Job-492', 'step': 1, 
    'increment': 17983, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0243092495948076})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.000950020970776677, 
    'stableTimeIncrement': 3.2664477345179e-08, 
    'stepTime': 0.000950020970776677, 'totalEnergy': 24.6701698303223, 
    'cpuTime': 4.0, 'jobName': 'Job-492', 'step': 1, 'increment': 24091, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0555899888277054})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.00114000402390957, 
    'stableTimeIncrement': 3.47066411165997e-08, 
    'stepTime': 0.00114000402390957, 'totalEnergy': 32.7018280029297, 
    'cpuTime': 5.0, 'jobName': 'Job-492', 'step': 1, 'increment': 29912, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.101768113672733})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.00133003003429621, 
    'stableTimeIncrement': 3.88631917758175e-08, 
    'stepTime': 0.00133003003429621, 'totalEnergy': 44.0965957641602, 
    'cpuTime': 6.0, 'jobName': 'Job-492', 'step': 1, 'increment': 35440, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.184871733188629})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.00152000074740499, 
    'stableTimeIncrement': 3.52242999213104e-08, 
    'stepTime': 0.00152000074740499, 'totalEnergy': 53.5537528991699, 
    'cpuTime': 6.90000009536743, 'jobName': 'Job-492', 'step': 1, 
    'increment': 40241, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.272456705570221})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.00171000685077161, 
    'stableTimeIncrement': 3.48714870312961e-08, 
    'stepTime': 0.00171000685077161, 'totalEnergy': 60.781063079834, 
    'cpuTime': 7.90000009536743, 'jobName': 'Job-492', 'step': 1, 
    'increment': 45548, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.327034652233124})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.00190001830924302, 
    'stableTimeIncrement': 3.45913271360132e-08, 
    'stepTime': 0.00190001830924302, 'totalEnergy': 69.9307327270508, 
    'cpuTime': 8.80000019073486, 'jobName': 'Job-492', 'step': 1, 
    'increment': 50849, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.388283640146255})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.00209002615883946, 
    'stableTimeIncrement': 3.38132188915097e-08, 
    'stepTime': 0.00209002615883946, 'totalEnergy': 82.4156265258789, 
    'cpuTime': 9.80000019073486, 'jobName': 'Job-492', 'step': 1, 
    'increment': 56172, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.349658906459808})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.00228001922369003, 
    'stableTimeIncrement': 3.22621040993454e-08, 
    'stepTime': 0.00228001922369003, 'totalEnergy': 100.868995666504, 
    'cpuTime': 10.8999996185303, 'jobName': 'Job-492', 'step': 1, 
    'increment': 61808, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.613723695278168})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.00247002043761313, 
    'stableTimeIncrement': 2.9899052123028e-08, 
    'stepTime': 0.00247002043761313, 'totalEnergy': 141.170471191406, 
    'cpuTime': 12.1000003814697, 'jobName': 'Job-492', 'step': 1, 
    'increment': 67954, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1.33559334278107})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.0026600151322782, 
    'stableTimeIncrement': 2.61611212692969e-08, 
    'stepTime': 0.0026600151322782, 'totalEnergy': 289.472106933594, 
    'cpuTime': 13.3999996185303, 'jobName': 'Job-492', 'step': 1, 
    'increment': 74910, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1.60651040077209})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.00285001425072551, 
    'stableTimeIncrement': 2.13501998302945e-08, 
    'stepTime': 0.00285001425072551, 'totalEnergy': 382.257568359375, 
    'cpuTime': 14.8999996185303, 'jobName': 'Job-492', 'step': 1, 
    'increment': 82892, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1.41088533401489})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.00304000452160835, 
    'stableTimeIncrement': 1.70569389723596e-08, 
    'stepTime': 0.00304000452160835, 'totalEnergy': 957.520324707031, 
    'cpuTime': 16.7999992370605, 'jobName': 'Job-492', 'step': 1, 
    'increment': 92669, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.767405569553375})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.0032300075981766, 
    'stableTimeIncrement': 1.51701655681791e-08, 
    'stepTime': 0.0032300075981766, 'totalEnergy': 1556.22326660156, 
    'cpuTime': 19.2000007629395, 'jobName': 'Job-492', 'step': 1, 
    'increment': 105063, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.850499391555786})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.00342000857926905, 
    'stableTimeIncrement': 1.26227517327493e-08, 
    'stepTime': 0.00342000857926905, 'totalEnergy': 2183.38549804688, 
    'cpuTime': 21.7999992370605, 'jobName': 'Job-492', 'step': 1, 
    'increment': 119110, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.670290231704712})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 18, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.0036100095603615, 
    'stableTimeIncrement': 1.17960157197672e-08, 
    'stepTime': 0.0036100095603615, 'totalEnergy': 2762.64599609375, 
    'cpuTime': 24.7999992370605, 'jobName': 'Job-492', 'step': 1, 
    'increment': 135831, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.735215723514557})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 19, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(STATUS, {'totalTime': 0.00380000006407499, 
    'stableTimeIncrement': 1.20682921433968e-08, 
    'stepTime': 0.00380000006407499, 'totalEnergy': 3054.41284179688, 
    'cpuTime': 27.5, 'jobName': 'Job-492', 'step': 1, 'increment': 151634, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.305558681488037})
mdb.jobs['Job-492']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 20, 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-492'})
mdb.jobs['Job-492']._Message(JOB_COMPLETED, {
    'time': 'Mon Jun 04 11:29:59 2018', 'jobName': 'Job-492'})
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['Die-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Blank-1']))
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['Die-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Blank-1']), size=0.00025)
mdb.models['Model-1'].rootAssembly.seedEdgeBySize(constraint=FINER, 
    deviationFactor=0.1, edges=
    mdb.models['Model-1'].rootAssembly.instances['Blank-1'].edges.getSequenceFromMask(
    ('[#2 ]', ), ), minSizeFactor=0.1, size=0.001)
mdb.models['Model-1'].rootAssembly.seedEdgeBySize(constraint=FINER, 
    deviationFactor=0.1, edges=
    mdb.models['Model-1'].rootAssembly.instances['Blank-1'].edges.getSequenceFromMask(
    ('[#2 ]', ), ), minSizeFactor=0.1, size=0.0005)
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['Die-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Blank-1']))
mdb.Job(activateLoadBalancing=False, atTime=None, contactPrint=OFF, 
    description='', echoPrint=OFF, explicitPrecision=SINGLE, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-2460', nodalOutputPrecision=SINGLE, 
    numCpus=1, numDomains=1, parallelizationMethodExplicit=DOMAIN, queue=None, 
    resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=
    0, waitMinutes=0)
mdb.jobs['Job-2460'].submit(consistencyChecking=OFF)
mdb.jobs['Job-2460']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 0, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 6188, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 1 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Boundary conditions are defined at the nodes contained in node set WarnNodeBcIntersectKinCon. In addition the nodes are also part of a surface involved in kinematic contact. The kinematic contact constraint will be overridden by the boundary conditions in case of a conflict. Penalty contact may be used instead.', 
    'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 7588, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 2.46308555773567e-08, 'stepTime': 0.0, 
    'totalEnergy': 0.0, 'cpuTime': 0.0, 'jobName': 'Job-2460', 'step': 1, 
    'increment': 0, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0})
mdb.jobs['Job-2460']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STATUS, {'totalTime': 0.000190011312952265, 
    'stableTimeIncrement': 2.46308573537135e-08, 
    'stepTime': 0.000190011312952265, 'totalEnergy': 0.0, 
    'cpuTime': 4.09999990463257, 'jobName': 'Job-2460', 'step': 1, 
    'increment': 7714, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0})
mdb.jobs['Job-2460']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STATUS, {'totalTime': 0.000380011450033635, 
    'stableTimeIncrement': 2.46293989647484e-08, 
    'stepTime': 0.000380011450033635, 'totalEnergy': 0.47973421216011, 
    'cpuTime': 8.60000038146973, 'jobName': 'Job-2460', 'step': 1, 
    'increment': 15772, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.00235245889052749})
mdb.jobs['Job-2460']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STATUS, {'totalTime': 0.00057000428205356, 
    'stableTimeIncrement': 1.2827451101316e-08, 
    'stepTime': 0.00057000428205356, 'totalEnergy': 2.60947608947754, 
    'cpuTime': 14.8000001907349, 'jobName': 'Job-2460', 'step': 1, 
    'increment': 26552, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.00292869750410318})
mdb.jobs['Job-2460']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STATUS, {'totalTime': 0.000760008813813329, 
    'stableTimeIncrement': 1.51367007816816e-08, 
    'stepTime': 0.000760008813813329, 'totalEnergy': 6.05489730834961, 
    'cpuTime': 22.1000003814697, 'jobName': 'Job-2460', 'step': 1, 
    'increment': 38810, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0122062843292952})
mdb.jobs['Job-2460']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STATUS, {'totalTime': 0.000950013345573097, 
    'stableTimeIncrement': 1.4909121048845e-08, 
    'stepTime': 0.000950013345573097, 'totalEnergy': 8.738600730896, 
    'cpuTime': 29.6000003814697, 'jobName': 'Job-2460', 'step': 1, 
    'increment': 50513, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0475937053561211})
mdb.jobs['Job-2460']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STATUS, {'totalTime': 0.00114000111352652, 
    'stableTimeIncrement': 1.66061226991587e-08, 
    'stepTime': 0.00114000111352652, 'totalEnergy': 10.5113363265991, 
    'cpuTime': 36.7999992370605, 'jobName': 'Job-2460', 'step': 1, 
    'increment': 61667, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.118220932781696})
mdb.jobs['Job-2460']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STATUS, {'totalTime': 0.00133001839276403, 
    'stableTimeIncrement': 1.95561984384085e-08, 
    'stepTime': 0.00133001839276403, 'totalEnergy': 12.9260101318359, 
    'cpuTime': 43.5999984741211, 'jobName': 'Job-2460', 'step': 1, 
    'increment': 71986, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.185482189059258})
mdb.jobs['Job-2460']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STATUS, {'totalTime': 0.00152001669630408, 
    'stableTimeIncrement': 2.19005134027839e-08, 
    'stepTime': 0.00152001669630408, 'totalEnergy': 14.9013977050781, 
    'cpuTime': 50.2999992370605, 'jobName': 'Job-2460', 'step': 1, 
    'increment': 82126, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.264812469482422})
mdb.jobs['Job-2460']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STATUS, {'totalTime': 0.00171000557020307, 
    'stableTimeIncrement': 1.95537310787586e-08, 
    'stepTime': 0.00171000557020307, 'totalEnergy': 17.1784725189209, 
    'cpuTime': 57.0, 'jobName': 'Job-2460', 'step': 1, 'increment': 92040, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.320005297660828})
mdb.jobs['Job-2460']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STATUS, {'totalTime': 0.00190001528244466, 
    'stableTimeIncrement': 1.57200350514586e-08, 
    'stepTime': 0.00190001528244466, 'totalEnergy': 21.135892868042, 
    'cpuTime': 64.0999984741211, 'jobName': 'Job-2460', 'step': 1, 
    'increment': 102533, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.342827975749969})
mdb.jobs['Job-2460']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STATUS, {'totalTime': 0.00209000566974282, 
    'stableTimeIncrement': 1.47048977439113e-08, 
    'stepTime': 0.00209000566974282, 'totalEnergy': 26.1687564849854, 
    'cpuTime': 72.4000015258789, 'jobName': 'Job-2460', 'step': 1, 
    'increment': 114597, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.390497237443924})
mdb.jobs['Job-2460']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STATUS, {'totalTime': 0.00228000804781914, 
    'stableTimeIncrement': 1.1134844157823e-08, 
    'stepTime': 0.00228000804781914, 'totalEnergy': 35.0476608276367, 
    'cpuTime': 82.5, 'jobName': 'Job-2460', 'step': 1, 'increment': 129132, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.566742241382599})
mdb.jobs['Job-2460']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STATUS, {'totalTime': 0.00247000390663743, 
    'stableTimeIncrement': 9.93923787717677e-09, 
    'stepTime': 0.00247000390663743, 'totalEnergy': 61.8531341552734, 
    'cpuTime': 95.1999969482422, 'jobName': 'Job-2460', 'step': 1, 
    'increment': 146842, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1.30144453048706})
mdb.jobs['Job-2460']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STATUS, {'totalTime': 0.0026600023265928, 
    'stableTimeIncrement': 8.89382256730187e-09, 
    'stepTime': 0.0026600023265928, 'totalEnergy': 88.0882110595703, 
    'cpuTime': 109.699996948242, 'jobName': 'Job-2460', 'step': 1, 
    'increment': 167277, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1.45074820518494})
mdb.jobs['Job-2460']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STATUS, {'totalTime': 0.00285000493749976, 
    'stableTimeIncrement': 7.62979457391566e-09, 
    'stepTime': 0.00285000493749976, 'totalEnergy': 130.997985839844, 
    'cpuTime': 126.800003051758, 'jobName': 'Job-2460', 'step': 1, 
    'increment': 191138, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1.29857873916626})
mdb.jobs['Job-2460']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STATUS, {'totalTime': 0.0030400010291487, 
    'stableTimeIncrement': 6.7039236384403e-09, 'stepTime': 0.0030400010291487, 
    'totalEnergy': 184.263458251953, 'cpuTime': 145.600006103516, 
    'jobName': 'Job-2460', 'step': 1, 'increment': 217513, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.934256732463837})
mdb.jobs['Job-2460']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STATUS, {'totalTime': 0.00323000224307179, 
    'stableTimeIncrement': 6.4544147804213e-09, 
    'stepTime': 0.00323000224307179, 'totalEnergy': 260.619720458984, 
    'cpuTime': 166.0, 'jobName': 'Job-2460', 'step': 1, 'increment': 246805, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.684396266937256})
mdb.jobs['Job-2460']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STATUS, {'totalTime': 0.00342000275850296, 
    'stableTimeIncrement': 5.74507375006306e-09, 
    'stepTime': 0.00342000275850296, 'totalEnergy': 315.155548095703, 
    'cpuTime': 187.300003051758, 'jobName': 'Job-2460', 'step': 1, 
    'increment': 278461, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.122334770858288})
mdb.jobs['Job-2460']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 18, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STATUS, {'totalTime': 0.00361000560224056, 
    'stableTimeIncrement': 5.73859670893739e-09, 
    'stepTime': 0.00361000560224056, 'totalEnergy': 371.068359375, 
    'cpuTime': 208.199996948242, 'jobName': 'Job-2460', 'step': 1, 
    'increment': 310946, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.407536804676056})
mdb.jobs['Job-2460']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 19, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STATUS, {'totalTime': 0.00380000006407499, 
    'stableTimeIncrement': 5.77215653052576e-09, 
    'stepTime': 0.00380000006407499, 'totalEnergy': 483.066436767578, 
    'cpuTime': 227.399993896484, 'jobName': 'Job-2460', 'step': 1, 
    'increment': 343583, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.020435580983758})
mdb.jobs['Job-2460']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 20, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(JOB_COMPLETED, {
    'time': 'Mon Jun 04 11:36:41 2018', 'jobName': 'Job-2460'})
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['Die-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Blank-1']))
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['Die-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Blank-1']), size=0.00037)
mdb.models['Model-1'].rootAssembly.seedEdgeBySize(constraint=FINER, 
    deviationFactor=0.1, edges=
    mdb.models['Model-1'].rootAssembly.instances['Blank-1'].edges.getSequenceFromMask(
    ('[#2 ]', ), ), minSizeFactor=0.1, size=0.001)
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['Die-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Blank-1']))
mdb.Job(activateLoadBalancing=False, atTime=None, contactPrint=OFF, 
    description='', echoPrint=OFF, explicitPrecision=SINGLE, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1008', nodalOutputPrecision=SINGLE, 
    numCpus=1, numDomains=1, parallelizationMethodExplicit=DOMAIN, queue=None, 
    resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=
    0, waitMinutes=0)
mdb.jobs['Job-1008'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1008']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 0, 'jobName': 'Job-1008'})
mdb.jobs['Job-1008']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1008'})
mdb.jobs['Job-1008']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1008'})
mdb.jobs['Job-1008']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 8044, 'jobName': 'Job-1008'})
mdb.jobs['Job-1008']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 1 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1008'})
mdb.jobs['Job-1008']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Boundary conditions are defined at the nodes contained in node set WarnNodeBcIntersectKinCon. In addition the nodes are also part of a surface involved in kinematic contact. The kinematic contact constraint will be overridden by the boundary conditions in case of a conflict. Penalty contact may be used instead.', 
    'jobName': 'Job-1008'})
mdb.jobs['Job-1008']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1008'})
mdb.jobs['Job-1008']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 1700, 'jobName': 'Job-1008'})
mdb.jobs['Job-1008']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 3.70941890537324e-08, 'stepTime': 0.0, 
    'totalEnergy': 0.0, 'cpuTime': 0.0, 'jobName': 'Job-1008', 'step': 1, 
    'increment': 0, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0})
mdb.jobs['Job-1008']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1008'})
mdb.jobs['Job-1008']._Message(STATUS, {'totalTime': 0.000190027800272219, 
    'stableTimeIncrement': 3.70942032645871e-08, 
    'stepTime': 0.000190027800272219, 'totalEnergy': 0.000108305306639522, 
    'cpuTime': 1.29999995231628, 'jobName': 'Job-1008', 'step': 1, 
    'increment': 5123, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1.32399463836919e-05})
mdb.jobs['Job-1008']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1008'})
mdb.jobs['Job-1008']._Message(STATUS, {'totalTime': 0.000380007637431845, 
    'stableTimeIncrement': 3.70890482770392e-08, 
    'stepTime': 0.000380007637431845, 'totalEnergy': 0.418272495269775, 
    'cpuTime': 2.59999990463257, 'jobName': 'Job-1008', 'step': 1, 
    'increment': 10244, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.00440941657871008})
mdb.jobs['Job-1008']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1008'})
mdb.jobs['Job-1008']._Message(STATUS, {'totalTime': 0.000570013362448663, 
    'stableTimeIncrement': 3.03411376023632e-08, 
    'stepTime': 0.000570013362448663, 'totalEnergy': 3.79994702339172, 
    'cpuTime': 4.5, 'jobName': 'Job-1008', 'step': 1, 'increment': 17300, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0100397672504187})
mdb.jobs['Job-1008']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-1008'})
mdb.jobs['Job-1008']._Message(STATUS, {'totalTime': 0.000760020047891885, 
    'stableTimeIncrement': 2.1623606016874e-08, 
    'stepTime': 0.000760020047891885, 'totalEnergy': 10.1376218795776, 
    'cpuTime': 7.0, 'jobName': 'Job-1008', 'step': 1, 'increment': 25789, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0121091678738594})
mdb.jobs['Job-1008']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-1008'})
mdb.jobs['Job-1008']._Message(STATUS, {'totalTime': 0.000950000423472375, 
    'stableTimeIncrement': 2.37068604747037e-08, 
    'stepTime': 0.000950000423472375, 'totalEnergy': 15.8648366928101, 
    'cpuTime': 9.39999961853027, 'jobName': 'Job-1008', 'step': 1, 
    'increment': 33862, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0507479459047318})
mdb.jobs['Job-1008']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-1008'})
mdb.jobs['Job-1008']._Message(STATUS, {'totalTime': 0.00114001671317965, 
    'stableTimeIncrement': 2.68470117248398e-08, 
    'stepTime': 0.00114001671317965, 'totalEnergy': 22.8801498413086, 
    'cpuTime': 11.8000001907349, 'jobName': 'Job-1008', 'step': 1, 
    'increment': 41695, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.10579651594162})
mdb.jobs['Job-1008']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-1008'})
mdb.jobs['Job-1008']._Message(STATUS, {'totalTime': 0.00133001466747373, 
    'stableTimeIncrement': 2.60854875477889e-08, 
    'stepTime': 0.00133001466747373, 'totalEnergy': 26.4348678588867, 
    'cpuTime': 13.8999996185303, 'jobName': 'Job-1008', 'step': 1, 
    'increment': 48442, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.186671778559685})
mdb.jobs['Job-1008']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-1008'})
mdb.jobs['Job-1008']._Message(STATUS, {'totalTime': 0.00152000016532838, 
    'stableTimeIncrement': 2.61583092964202e-08, 
    'stepTime': 0.00152000016532838, 'totalEnergy': 30.3686485290527, 
    'cpuTime': 16.0, 'jobName': 'Job-1008', 'step': 1, 'increment': 54982, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.271451950073242})
mdb.jobs['Job-1008']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-1008'})
mdb.jobs['Job-1008']._Message(STATUS, {'totalTime': 0.00171001395210624, 
    'stableTimeIncrement': 2.7496144028305e-08, 
    'stepTime': 0.00171001395210624, 'totalEnergy': 36.2750701904297, 
    'cpuTime': 18.1000003814697, 'jobName': 'Job-1008', 'step': 1, 
    'increment': 61745, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.332220762968063})
mdb.jobs['Job-1008']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-1008'})
mdb.jobs['Job-1008']._Message(STATUS, {'totalTime': 0.00190001330338418, 
    'stableTimeIncrement': 2.79115450751988e-08, 
    'stepTime': 0.00190001330338418, 'totalEnergy': 43.8409194946289, 
    'cpuTime': 20.2999992370605, 'jobName': 'Job-1008', 'step': 1, 
    'increment': 68555, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.3586166203022})
mdb.jobs['Job-1008']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-1008'})
mdb.jobs['Job-1008']._Message(STATUS, {'totalTime': 0.00209002196788788, 
    'stableTimeIncrement': 2.48474680830668e-08, 
    'stepTime': 0.00209002196788788, 'totalEnergy': 52.773120880127, 
    'cpuTime': 22.6000003814697, 'jobName': 'Job-1008', 'step': 1, 
    'increment': 75728, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.37246698141098})
mdb.jobs['Job-1008']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-1008'})
mdb.jobs['Job-1008']._Message(STATUS, {'totalTime': 0.00228001200594008, 
    'stableTimeIncrement': 2.0691349078561e-08, 
    'stepTime': 0.00228001200594008, 'totalEnergy': 61.621395111084, 
    'cpuTime': 25.2000007629395, 'jobName': 'Job-1008', 'step': 1, 
    'increment': 83709, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.515101194381714})
mdb.jobs['Job-1008']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Job-1008'})
mdb.jobs['Job-1008']._Message(STATUS, {'totalTime': 0.00247000646777451, 
    'stableTimeIncrement': 1.97634424381476e-08, 
    'stepTime': 0.00247000646777451, 'totalEnergy': 80.2635650634766, 
    'cpuTime': 28.2999992370605, 'jobName': 'Job-1008', 'step': 1, 
    'increment': 93040, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1.36233115196228})
mdb.jobs['Job-1008']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Job-1008'})
mdb.jobs['Job-1008']._Message(STATUS, {'totalTime': 0.00266001070849597, 
    'stableTimeIncrement': 1.79538073297181e-08, 
    'stepTime': 0.00266001070849597, 'totalEnergy': 120.95426940918, 
    'cpuTime': 31.7999992370605, 'jobName': 'Job-1008', 'step': 1, 
    'increment': 103526, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1.56491386890411})
mdb.jobs['Job-1008']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Job-1008'})
mdb.jobs['Job-1008']._Message(STATUS, {'totalTime': 0.00285000610165298, 
    'stableTimeIncrement': 1.47177630083206e-08, 
    'stepTime': 0.00285000610165298, 'totalEnergy': 195.391082763672, 
    'cpuTime': 35.7999992370605, 'jobName': 'Job-1008', 'step': 1, 
    'increment': 115379, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1.06085693836212})
mdb.jobs['Job-1008']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Job-1008'})
mdb.jobs['Job-1008']._Message(STATUS, {'totalTime': 0.00304000708274543, 
    'stableTimeIncrement': 1.43231142502032e-08, 
    'stepTime': 0.00304000708274543, 'totalEnergy': 267.935913085938, 
    'cpuTime': 40.2000007629395, 'jobName': 'Job-1008', 'step': 1, 
    'increment': 128485, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.902219951152802})
mdb.jobs['Job-1008']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'Job-1008'})
mdb.jobs['Job-1008']._Message(STATUS, {'totalTime': 0.00323000806383789, 
    'stableTimeIncrement': 1.25506582904222e-08, 
    'stepTime': 0.00323000806383789, 'totalEnergy': 361.031951904297, 
    'cpuTime': 44.9000015258789, 'jobName': 'Job-1008', 'step': 1, 
    'increment': 142864, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.34438481926918})
mdb.jobs['Job-1008']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'Job-1008'})
mdb.jobs['Job-1008']._Message(STATUS, {'totalTime': 0.0034200088120997, 
    'stableTimeIncrement': 1.19857892499908e-08, 
    'stepTime': 0.0034200088120997, 'totalEnergy': 593.018798828125, 
    'cpuTime': 50.2000007629395, 'jobName': 'Job-1008', 'step': 1, 
    'increment': 159214, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.178606197237968})
mdb.jobs['Job-1008']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 18, 'jobName': 'Job-1008'})
mdb.jobs['Job-1008']._Message(STATUS, {'totalTime': 0.00361000350676477, 
    'stableTimeIncrement': 1.07853876940567e-08, 
    'stepTime': 0.00361000350676477, 'totalEnergy': 792.005859375, 
    'cpuTime': 55.4000015258789, 'jobName': 'Job-1008', 'step': 1, 
    'increment': 176360, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.205522656440735})
mdb.jobs['Job-1008']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 19, 'jobName': 'Job-1008'})
mdb.jobs['Job-1008']._Message(STATUS, {'totalTime': 0.00380000006407499, 
    'stableTimeIncrement': 1.01666568497194e-08, 
    'stepTime': 0.00380000006407499, 'totalEnergy': 937.576721191406, 
    'cpuTime': 60.7000007629395, 'jobName': 'Job-1008', 'step': 1, 
    'increment': 194264, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.157433554530144})
mdb.jobs['Job-1008']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 20, 'jobName': 'Job-1008'})
mdb.jobs['Job-1008']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1008'})
mdb.jobs['Job-1008']._Message(JOB_COMPLETED, {
    'time': 'Mon Jun 04 11:39:39 2018', 'jobName': 'Job-1008'})
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['Die-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Blank-1']))
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['Die-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Blank-1']), size=0.00025)
mdb.models['Model-1'].rootAssembly.seedEdgeBySize(constraint=FINER, 
    deviationFactor=0.1, edges=
    mdb.models['Model-1'].rootAssembly.instances['Blank-1'].edges.getSequenceFromMask(
    ('[#2 ]', ), ), minSizeFactor=0.1, size=0.0005)
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['Die-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Blank-1']))
# Save by faezeh on 2018_06_04-11.51.54; build 6.14-1 2014_06_04-15.11.02 134264
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.Model(modelType=STANDARD_EXPLICIT, name='Model-2')
del mdb.models['Model-2']
mdb.Model(name='Model-2', objectToCopy=mdb.models['Model-1'])
del mdb.models['Model-1'].parts['Blank']
del mdb.models['Model-1'].parts['Die']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=0.01)
mdb.models['Model-1'].sketches['__profile__'].sketchOptions.setValues(
    decimalPlaces=4)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.0, 0.0), 
    point2=(0.02058, 0.01))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Blank', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Blank'].BaseSolidExtrude(depth=0.01, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=0.1)
mdb.models['Model-1'].sketches['__profile__'].sketchOptions.setValues(
    decimalPlaces=3)
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(0.0, 0.005))
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(0.005145, 0.0))
mdb.models['Model-1'].sketches['__profile__'].linearPattern(angle1=0.0, angle2=
    90.0, geomList=(), number1=4, number2=1, spacing1=0.01029, spacing2=0.01, 
    vertexList=(mdb.models['Model-1'].sketches['__profile__'].vertices[0], 
    mdb.models['Model-1'].sketches['__profile__'].vertices[1]))
mdb.models['Model-1'].sketches['__profile__'].linearPattern(angle1=180.0, 
    angle2=90.0, geomList=(), number1=4, number2=1, spacing1=0.01029, spacing2=
    0.01, vertexList=(
    mdb.models['Model-1'].sketches['__profile__'].vertices[0], 
    mdb.models['Model-1'].sketches['__profile__'].vertices[1]))
mdb.models['Model-1'].sketches['__profile__'].Spline(points=((-0.03087, 0.005), 
    (-0.025725, 0.0), (-0.02058, 0.005), (-0.015435, 0.0), (-0.01029, 0.005), (
    -0.005145, 0.0), (0.0, 0.005), (0.005145, 0.0), (0.01029, 0.005), (
    0.015435, 0.0), (0.02058, 0.005), (0.025725, 0.0), (0.03087, 0.005), (
    0.036015, 0.0)))
mdb.models['Model-1'].sketches['__profile__'].ConstructionLine(angle=90.0, 
    point1=(0.0, 0.005))
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[0], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].ConstructionLine(angle=90.0, 
    point1=(0.025725, 0.0))
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[5], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4])
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[4])
mdb.models['Model-1'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2], point1=(
    -0.00998467300087214, 0.0041805156506598))
mdb.models['Model-1'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5], point1=(
    0.0296187065541744, 0.00463624717667699))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.025725, 0.0), 
    point2=(0.0479999999757856, 0.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[7])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=0.1)
mdb.models['Model-1'].sketches['__profile__'].sketchOptions.setValues(
    decimalPlaces=3)
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(0.0, 0.005))
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(0.01029, 0.0))
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(0.01029, 0.0))
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(0.005145, 0.0))
mdb.models['Model-1'].sketches['__profile__'].linearPattern(angle1=0.0, angle2=
    90.0, geomList=(), number1=4, number2=1, spacing1=0.01029, spacing2=0.01, 
    vertexList=(mdb.models['Model-1'].sketches['__profile__'].vertices[0], 
    mdb.models['Model-1'].sketches['__profile__'].vertices[1]))
mdb.models['Model-1'].sketches['__profile__'].linearPattern(angle1=180.0, 
    angle2=90.0, geomList=(), number1=4, number2=1, spacing1=0.01029, spacing2=
    0.01, vertexList=(
    mdb.models['Model-1'].sketches['__profile__'].vertices[0], 
    mdb.models['Model-1'].sketches['__profile__'].vertices[1]))
mdb.models['Model-1'].sketches['__profile__'].Spline(points=((-0.03087, 0.005), 
    (-0.025725, 0.0), (-0.02058, 0.005), (-0.015435, 0.0), (-0.01029, 0.005), (
    -0.005145, 0.0), (0.0, 0.005), (0.005145, 0.0), (0.01029, 0.005), (
    0.015435, 0.0), (0.02058, 0.005), (0.025725, 0.0), (0.03087, 0.005), (
    0.036015, 0.0)))
mdb.models['Model-1'].sketches['__profile__'].ConstructionLine(angle=90.0, 
    point1=(0.0, 0.005))
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[0], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].ConstructionLine(angle=90.0, 
    point1=(0.025725, 0.0))
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[5], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4])
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[4])
mdb.models['Model-1'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2], point1=(
    -0.0295306779444218, 0.00269938493147492))
mdb.models['Model-1'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5], point1=(
    0.0287664122879505, 0.0030411840416491))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.025725, 0.0), 
    point2=(0.0555, 0.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[7])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=0.1)
mdb.models['Model-1'].sketches['__profile__'].sketchOptions.setValues(
    decimalPlaces=3)
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(0.005, 0.0))
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(0.0, 0.005))
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(0.005145, 0.0))
mdb.models['Model-1'].sketches['__profile__'].linearPattern(angle1=0.0, angle2=
    90.0, geomList=(), number1=4, number2=1, spacing1=0.01029, spacing2=0.01, 
    vertexList=(mdb.models['Model-1'].sketches['__profile__'].vertices[0], 
    mdb.models['Model-1'].sketches['__profile__'].vertices[1]))
mdb.models['Model-1'].sketches['__profile__'].linearPattern(angle1=180.0, 
    angle2=90.0, geomList=(), number1=4, number2=1, spacing1=0.01029, spacing2=
    0.01, vertexList=(
    mdb.models['Model-1'].sketches['__profile__'].vertices[0], 
    mdb.models['Model-1'].sketches['__profile__'].vertices[1]))
mdb.models['Model-1'].sketches['__profile__'].Spline(points=((-0.03087, 0.005), 
    (-0.025725, 0.0), (-0.02058, 0.005), (-0.015435, 0.0), (-0.01029, 0.005), (
    -0.005145, 0.0), (0.0, 0.005), (0.005145, 0.0), (0.01029, 0.005), (
    0.015435, 0.0), (0.02058, 0.005), (0.025725, 0.0), (0.03087, 0.005), (
    0.036015, 0.0)))
mdb.models['Model-1'].sketches['__profile__'].ConstructionLine(angle=90.0, 
    point1=(0.0, 0.005))
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[0], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].ConstructionLine(angle=90.0, 
    point1=(0.025725, 0.0))
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[5], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4])
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[4])
mdb.models['Model-1'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2], point1=(
    -0.0282806418836117, 0.00173095101490617))
mdb.models['Model-1'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5], point1=(
    0.0289368703961372, 0.00195881770923734))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.025725, 0.0), 
    point2=(0.05, 0.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[7])
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Die', type=
    DISCRETE_RIGID_SURFACE)
mdb.models['Model-1'].parts['Die'].BaseShellExtrude(depth=0.01, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].parts['Blank'].SectionAssignment(offset=0.0, offsetField=
    '', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Blank'].cells.getSequenceFromMask(mask=(
    '[#1 ]', ), )), sectionName='Section-1', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].steps['Step-1'].setValues(timePeriod=0.00335)
del mdb.models['Model-1'].interactions['Int-1']
mdb.models['Model-1'].SurfaceToSurfaceContactExp(clearanceRegion=None, 
    createStepName='Initial', datumAxis=None, initialClearance=OMIT, 
    interactionProperty='fricless', master=Region(
    side1Faces=mdb.models['Model-1'].rootAssembly.instances['Die-1'].faces.getSequenceFromMask(
    mask=('[#3 ]', ), )), mechanicalConstraint=KINEMATIC, name='Int-1', slave=
    Region(
    side1Faces=mdb.models['Model-1'].rootAssembly.instances['Blank-1'].faces.getSequenceFromMask(
    mask=('[#6 ]', ), )), sliding=FINITE)
del mdb.models['Model-1'].boundaryConditions['Blank']
del mdb.models['Model-1'].boundaryConditions['Die-disp']
del mdb.models['Model-1'].boundaryConditions['Die-fix']
mdb.models['Model-1'].parts['Die'].ReferencePoint(point=
    mdb.models['Model-1'].parts['Die'].vertices[4])
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].DisplacementBC(amplitude='Amp-1', createStepName='Step-1'
    , distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'Die-disp', region=Region(referencePoints=(
    mdb.models['Model-1'].rootAssembly.instances['Die-1'].referencePoints[2], 
    )), u1=UNSET, u2=-0.0067, u3=UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['Model-1'].ZsymmBC(createStepName='Initial', localCsys=None, name=
    'Blank-x', region=Region(
    faces=mdb.models['Model-1'].rootAssembly.instances['Blank-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), ), 
    edges=mdb.models['Model-1'].rootAssembly.instances['Die-1'].edges.getSequenceFromMask(
    mask=('[#10 ]', ), )))
mdb.models['Model-1'].boundaryConditions.changeKey(fromName='Blank-x', toName=
    'Zsymm')
mdb.models['Model-1'].XsymmBC(createStepName='Initial', localCsys=None, name=
    'Xsymm', region=Region(
    faces=mdb.models['Model-1'].rootAssembly.instances['Blank-1'].faces.getSequenceFromMask(
    mask=('[#1 ]', ), ), 
    edges=mdb.models['Model-1'].rootAssembly.instances['Die-1'].edges.getSequenceFromMask(
    mask=('[#20 ]', ), )))
# Save by faezeh on 2018_06_04-13.03.51; build 6.14-1 2014_06_04-15.11.02 134264
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.seedEdgeBySize(constraint=FINER, 
    deviationFactor=0.1, edges=
    mdb.models['Model-1'].rootAssembly.instances['Blank-1'].edges.getSequenceFromMask(
    ('[#5 ]', ), ), minSizeFactor=0.1, size=0.001)
mdb.models['Model-1'].rootAssembly.setElementType(elemTypes=(ElemType(
    elemCode=C3D8R, elemLibrary=STANDARD, secondOrderAccuracy=OFF, 
    kinematicSplit=AVERAGE_STRAIN, hourglassControl=DEFAULT, 
    distortionControl=DEFAULT), ElemType(elemCode=C3D6, elemLibrary=STANDARD), 
    ElemType(elemCode=C3D4, elemLibrary=STANDARD)), regions=(
    mdb.models['Model-1'].rootAssembly.instances['Blank-1'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), ))
mdb.models['Model-1'].rootAssembly.setElementType(elemTypes=(ElemType(
    elemCode=R3D4, elemLibrary=STANDARD), ElemType(elemCode=R3D3, 
    elemLibrary=STANDARD)), regions=(
    mdb.models['Model-1'].rootAssembly.instances['Die-1'].faces.getSequenceFromMask(
    ('[#3 ]', ), ), ))
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['Die-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Blank-1']))
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['Die-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Blank-1']))
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['Die-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Blank-1']), size=0.0025)
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['Die-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Blank-1']), size=0.0005)
mdb.models['Model-1'].rootAssembly.seedEdgeBySize(constraint=FINER, 
    deviationFactor=0.1, edges=
    mdb.models['Model-1'].rootAssembly.instances['Blank-1'].edges.getSequenceFromMask(
    ('[#285 ]', ), ), minSizeFactor=0.1, size=0.001)
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['Die-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Blank-1']))
del mdb.jobs['Job-1008']
del mdb.jobs['Job-2460']
del mdb.jobs['Job-492']
mdb.Job(activateLoadBalancing=False, atTime=None, contactPrint=OFF, 
    description='', echoPrint=OFF, explicitPrecision=SINGLE, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-8200', nodalOutputPrecision=SINGLE, 
    numCpus=1, numDomains=1, parallelizationMethodExplicit=DOMAIN, queue=None, 
    resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=
    0, waitMinutes=0)
mdb.jobs['Job-8200'].submit(consistencyChecking=OFF)
mdb.jobs['Job-8200']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 0, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *ADAPTIVEMESH, file "Job-8200.inp", line 23067: Unknown assembly set _PICKEDSET11', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'ELEMENT SET ASSEMBLY__PICKEDSET11 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'ADAPTIVE MESH HAS BEEN SPECIFIED ON ELSET ASSEMBLY__PICKEDSET11 BUT THIS ELSET HAS NOT BEEN DEFINED', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '92 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Temp\\PRJCT\\Job-8200.odb', 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Job-8200'})
mdb.models['Model-1'].steps['Step-1'].adaptiveMeshDomains['Step-1'].setValues(
    region=Region(
    cells=mdb.models['Model-1'].rootAssembly.instances['Blank-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )))
mdb.jobs['Job-8200'].submit(consistencyChecking=OFF)
mdb.jobs['Job-8200']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 0, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '92 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 8280, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 184 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(ERROR, {'phase': PACKAGER_PHASE, 
    'message': 'The rigid bodies with the reference nodes contained in node set ErrNodeRefNodeNoMass have no mass associated with them and some degrees of freedom of the reference node are not restrained. Either mass must be defined or all of the translational degrees of freedom must be constrained. See the status file for further details.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(ERROR, {'phase': PACKAGER_PHASE, 
    'message': 'The rigid bodies with the reference nodes contained in node set ErrNodeRefNodeNoRot1Axis have atleast one axis about which the rotary inertia magnitude is zero, and the rigid bodies have atleast one rotational degree of freedom which is unconstrained. Either rotary inertia must be defined at the reference nodes or all of the rotational degrees of freedom at the reference nodes must be constrained. See the status file for further details.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSlaveNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Boundary conditions are defined at the nodes contained in node set WarnNodeBcIntersectKinCon. In addition the nodes are also part of a surface involved in kinematic contact. The kinematic contact constraint will be overridden by the boundary conditions in case of a conflict. Penalty contact may be used instead.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(ABORTED, {'phase': PACKAGER_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(ERROR, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-8200'})
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='Initial', 
    distributionType=UNIFORM, fieldName='', localCsys=None, name='Die-fix', 
    region=Region(
    faces=mdb.models['Model-1'].rootAssembly.instances['Die-1'].faces.getSequenceFromMask(
    mask=('[#3 ]', ), )), u1=UNSET, u2=UNSET, u3=UNSET, ur1=SET, ur2=SET, ur3=
    SET)
mdb.jobs['Job-8200'].submit(consistencyChecking=OFF)
mdb.jobs['Job-8200']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 0, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'Boundary conditions are specified on inactive dof of 2541 nodes. The nodes have been identified in node set WarnNodeBCInactiveDof.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '2541 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 8560, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 17226 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(ERROR, {'phase': PACKAGER_PHASE, 
    'message': 'The rigid bodies with the reference nodes contained in node set ErrNodeRefNodeNoMass have no mass associated with them and some degrees of freedom of the reference node are not restrained. Either mass must be defined or all of the translational degrees of freedom must be constrained. See the status file for further details.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(ERROR, {'phase': PACKAGER_PHASE, 
    'message': 'The rigid bodies with the reference nodes contained in node set ErrNodeRefNodeNoRot1Axis have atleast one axis about which the rotary inertia magnitude is zero, and the rigid bodies have atleast one rotational degree of freedom which is unconstrained. Either rotary inertia must be defined at the reference nodes or all of the rotational degrees of freedom at the reference nodes must be constrained. See the status file for further details.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSlaveNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Boundary conditions are defined at the nodes contained in node set WarnNodeBcIntersectKinCon. In addition the nodes are also part of a surface involved in kinematic contact. The kinematic contact constraint will be overridden by the boundary conditions in case of a conflict. Penalty contact may be used instead.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(ABORTED, {'phase': PACKAGER_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(ERROR, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-8200'})
mdb.models['Model-1'].boundaryConditions['Die-fix'].setValues(region=Region(
    referencePoints=(
    mdb.models['Model-1'].rootAssembly.instances['Die-1'].referencePoints[2], 
    )))
mdb.models['Model-1'].boundaryConditions['Zsymm'].setValues(region=Region(
    faces=mdb.models['Model-1'].rootAssembly.instances['Blank-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), ), 
    edges=mdb.models['Model-1'].rootAssembly.instances['Die-1'].edges.getSequenceFromMask(
    mask=('[#11 ]', ), )))
mdb.jobs['Job-8200'].submit(consistencyChecking=OFF)
mdb.jobs['Job-8200']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 0, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '141 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 8992, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 281 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(ERROR, {'phase': PACKAGER_PHASE, 
    'message': 'The rigid bodies with the reference nodes contained in node set ErrNodeRefNodeNoMass have no mass associated with them and some degrees of freedom of the reference node are not restrained. Either mass must be defined or all of the translational degrees of freedom must be constrained. See the status file for further details.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSlaveNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Boundary conditions are defined at the nodes contained in node set WarnNodeBcIntersectKinCon. In addition the nodes are also part of a surface involved in kinematic contact. The kinematic contact constraint will be overridden by the boundary conditions in case of a conflict. Penalty contact may be used instead.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(ABORTED, {'phase': PACKAGER_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(ERROR, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-8200'})
del mdb.models['Model-1'].boundaryConditions['Die-fix']
mdb.jobs['Job-8200'].submit(consistencyChecking=OFF)
mdb.jobs['Job-8200']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 0, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '141 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 9296, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 281 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(ERROR, {'phase': PACKAGER_PHASE, 
    'message': 'The rigid bodies with the reference nodes contained in node set ErrNodeRefNodeNoMass have no mass associated with them and some degrees of freedom of the reference node are not restrained. Either mass must be defined or all of the translational degrees of freedom must be constrained. See the status file for further details.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(ERROR, {'phase': PACKAGER_PHASE, 
    'message': 'The rigid bodies with the reference nodes contained in node set ErrNodeRefNodeNoRot1Axis have atleast one axis about which the rotary inertia magnitude is zero, and the rigid bodies have atleast one rotational degree of freedom which is unconstrained. Either rotary inertia must be defined at the reference nodes or all of the rotational degrees of freedom at the reference nodes must be constrained. See the status file for further details.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSlaveNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Boundary conditions are defined at the nodes contained in node set WarnNodeBcIntersectKinCon. In addition the nodes are also part of a surface involved in kinematic contact. The kinematic contact constraint will be overridden by the boundary conditions in case of a conflict. Penalty contact may be used instead.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(ABORTED, {'phase': PACKAGER_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(ERROR, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-8200'})
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='Initial', 
    distributionType=UNIFORM, fieldName='', localCsys=None, name='Die-fixed', 
    region=Region(referencePoints=(
    mdb.models['Model-1'].rootAssembly.instances['Die-1'].referencePoints[2], 
    )), u1=UNSET, u2=UNSET, u3=UNSET, ur1=SET, ur2=SET, ur3=SET)
mdb.jobs['Job-8200'].submit(consistencyChecking=OFF)
mdb.jobs['Job-8200']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 0, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '141 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 5220, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 281 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(ERROR, {'phase': PACKAGER_PHASE, 
    'message': 'The rigid bodies with the reference nodes contained in node set ErrNodeRefNodeNoMass have no mass associated with them and some degrees of freedom of the reference node are not restrained. Either mass must be defined or all of the translational degrees of freedom must be constrained. See the status file for further details.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSlaveNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Boundary conditions are defined at the nodes contained in node set WarnNodeBcIntersectKinCon. In addition the nodes are also part of a surface involved in kinematic contact. The kinematic contact constraint will be overridden by the boundary conditions in case of a conflict. Penalty contact may be used instead.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(ABORTED, {'phase': PACKAGER_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(ERROR, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-8200'})
mdb.models.changeKey(fromName='Model-1', toName='Case2')
mdb.models.changeKey(fromName='Model-2', toName='Case1')
mdb.Model(name='Case3', objectToCopy=mdb.models['Case2'])
mdb.models['Case2'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Case2'].parts['Blank'].features['Solid extrude-1'].sketch)
mdb.models['Case2'].parts['Blank'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Case2'].sketches['__edit__'], 
    upToFeature=mdb.models['Case2'].parts['Blank'].features['Solid extrude-1'])
del mdb.models['Case2'].sketches['__edit__']
mdb.models['Case2'].parts['Blank'].features['Solid extrude-1'].setValues(depth=
    0.02058)
mdb.models['Case2'].parts['Blank'].regenerate()
mdb.models['Case2'].parts['Blank'].features['Solid extrude-1'].setValues(depth=
    0.01)
mdb.models['Case2'].parts['Blank'].regenerate()
mdb.models['Case2'].parts['Blank'].regenerate()
mdb.models['Case2'].rootAssembly.regenerate()
mdb.models['Case2'].DisplacementBC(amplitude=UNSET, createStepName='Initial', 
    distributionType=UNIFORM, fieldName='', localCsys=None, name='BlankY', 
    region=Region(
    faces=mdb.models['Case2'].rootAssembly.instances['Blank-1'].faces.getSequenceFromMask(
    mask=('[#8 ]', ), )), u1=UNSET, u2=SET, u3=UNSET, ur1=UNSET, ur2=UNSET, 
    ur3=UNSET)
del mdb.jobs['Job-8200']
mdb.models.changeKey(fromName='Case1', toName='Model-1')
mdb.Job(activateLoadBalancing=False, atTime=None, contactPrint=OFF, 
    description='', echoPrint=OFF, explicitPrecision=SINGLE, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Case2', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-8200', nodalOutputPrecision=SINGLE, 
    numCpus=1, numDomains=1, parallelizationMethodExplicit=DOMAIN, queue=None, 
    resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=
    0, waitMinutes=0)
mdb.jobs['Job-8200'].submit(consistencyChecking=OFF)
mdb.jobs['Job-8200']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 0, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '141 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 5512, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 281 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(ERROR, {'phase': PACKAGER_PHASE, 
    'message': 'The rigid bodies with the reference nodes contained in node set ErrNodeRefNodeNoMass have no mass associated with them and some degrees of freedom of the reference node are not restrained. Either mass must be defined or all of the translational degrees of freedom must be constrained. See the status file for further details.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSlaveNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Boundary conditions are defined at the nodes contained in node set WarnNodeBcIntersectKinCon. In addition the nodes are also part of a surface involved in kinematic contact. The kinematic contact constraint will be overridden by the boundary conditions in case of a conflict. Penalty contact may be used instead.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(ABORTED, {'phase': PACKAGER_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(ERROR, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-8200'})
mdb.models.changeKey(fromName='Model-1', toName='Case1')
mdb.models['Case2'].boundaryConditions['Die-fixed'].setValues(u1=SET, u3=SET)
mdb.jobs['Job-8200'].submit(consistencyChecking=OFF)
mdb.jobs['Job-8200']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 0, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '141 nodes have dof on which incorrect boundary conditions may have been specified. The nodes have been identified in node set WarnNodeBCIncorrectDof.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 5452, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 281 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Each of the nodes in node set WarnNodeBcAtRbSlaveNode have prescribed boundary conditions and belong to rigid bodies but are not rigid body reference nodes. The boundary conditions at these nodes will not constrain the motion of the rigid bodies. See the status file for further details.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Boundary conditions are defined at the nodes contained in node set WarnNodeBcIntersectKinCon. In addition the nodes are also part of a surface involved in kinematic contact. The kinematic contact constraint will be overridden by the boundary conditions in case of a conflict. Penalty contact may be used instead.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 7916, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 6.22261921989775e-08, 'stepTime': 0.0, 
    'totalEnergy': 0.0, 'cpuTime': 0.100000001490116, 'jobName': 'Job-8200', 
    'step': 1, 'increment': 0, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.000167509715538472, 
    'stableTimeIncrement': 6.22261921989775e-08, 
    'stepTime': 0.000167509715538472, 'totalEnergy': 0.0, 
    'cpuTime': 8.89999961853027, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 2692, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.000335015734890476, 
    'stableTimeIncrement': 6.22237266156844e-08, 
    'stepTime': 0.000335015734890476, 'totalEnergy': 3.65892606168927e-06, 
    'cpuTime': 17.7999992370605, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 5384, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 7.58292226237245e-05})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.000502559065353125, 
    'stableTimeIncrement': 6.2074555273739e-08, 
    'stepTime': 0.000502559065353125, 'totalEnergy': 0.0554029084742069, 
    'cpuTime': 27.0, 'jobName': 'Job-8200', 'step': 1, 'increment': 8084, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.000126178536447696})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.000670019944664091, 
    'stableTimeIncrement': 5.71471439059223e-08, 
    'stepTime': 0.000670019944664091, 'totalEnergy': 0.408493667840958, 
    'cpuTime': 37.0999984741211, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 10883, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.000501340546179563})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.000837516854517162, 
    'stableTimeIncrement': 4.83916942073392e-08, 
    'stepTime': 0.000837516854517162, 'totalEnergy': 1.09454619884491, 
    'cpuTime': 51.2000007629395, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 14220, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.00176599877886474})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.00100500974804163, 
    'stableTimeIncrement': 4.61439917387452e-08, 
    'stepTime': 0.00100500974804163, 'totalEnergy': 1.93682432174683, 
    'cpuTime': 68.9000015258789, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 17940, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.00475719710811973})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.00117251044139266, 
    'stableTimeIncrement': 3.88197349820985e-08, 
    'stepTime': 0.00117251044139266, 'totalEnergy': 2.51225733757019, 
    'cpuTime': 86.6999969482422, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 21638, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0114017240703106})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.00134004419669509, 
    'stableTimeIncrement': 5.1523343813642e-08, 
    'stepTime': 0.00134004419669509, 'totalEnergy': 3.25766634941101, 
    'cpuTime': 106.5, 'jobName': 'Job-8200', 'step': 1, 'increment': 25513, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0202497281134129})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.00150754558853805, 
    'stableTimeIncrement': 5.50955334688297e-08, 
    'stepTime': 0.00150754558853805, 'totalEnergy': 3.75043630599976, 
    'cpuTime': 122.400001525879, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 28810, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0302434004843235})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.00167504383716732, 
    'stableTimeIncrement': 5.04932557987559e-08, 
    'stepTime': 0.00167504383716732, 'totalEnergy': 4.4893479347229, 
    'cpuTime': 139.300003051758, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 32378, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0347289964556694})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-8200'})
mdb.models['Case2'].boundaryConditions['Xsymm'].setValues(region=Region(
    faces=mdb.models['Case2'].rootAssembly.instances['Blank-1'].faces.getSequenceFromMask(
    mask=('[#1 ]', ), )))
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.00184252124745399, 
    'stableTimeIncrement': 3.7629877880363e-08, 
    'stepTime': 0.00184252124745399, 'totalEnergy': 5.0531325340271, 
    'cpuTime': 157.300003051758, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 36088, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0354309938848019})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-8200'})
mdb.models['Case2'].boundaryConditions['Zsymm'].setValues(region=Region(
    faces=mdb.models['Case2'].rootAssembly.instances['Blank-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )))
mdb.jobs['Job-8200']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200'].submit(consistencyChecking=OFF)
mdb.jobs['Job-8200']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 0, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 6316, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 1 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Boundary conditions are defined at the nodes contained in node set WarnNodeBcIntersectKinCon. In addition the nodes are also part of a surface involved in kinematic contact. The kinematic contact constraint will be overridden by the boundary conditions in case of a conflict. Penalty contact may be used instead.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 3732, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 6.22261921989775e-08, 'stepTime': 0.0, 
    'totalEnergy': 0.0, 'cpuTime': 0.100000001490116, 'jobName': 'Job-8200', 
    'step': 1, 'increment': 0, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.000167509715538472, 
    'stableTimeIncrement': 6.22261921989775e-08, 
    'stepTime': 0.000167509715538472, 'totalEnergy': 0.0, 
    'cpuTime': 8.60000038146973, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 2692, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.000335015734890476, 
    'stableTimeIncrement': 6.22237266156844e-08, 
    'stepTime': 0.000335015734890476, 'totalEnergy': 3.65892606168927e-06, 
    'cpuTime': 17.2000007629395, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 5384, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 7.58292226237245e-05})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.000502559065353125, 
    'stableTimeIncrement': 6.2074555273739e-08, 
    'stepTime': 0.000502559065353125, 'totalEnergy': 0.0554029084742069, 
    'cpuTime': 26.2000007629395, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 8084, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.000126178536447696})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.000670019944664091, 
    'stableTimeIncrement': 5.71471439059223e-08, 
    'stepTime': 0.000670019944664091, 'totalEnergy': 0.408493667840958, 
    'cpuTime': 36.2000007629395, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 10883, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.000501340546179563})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.000837516854517162, 
    'stableTimeIncrement': 4.83916942073392e-08, 
    'stepTime': 0.000837516854517162, 'totalEnergy': 1.09454619884491, 
    'cpuTime': 50.2999992370605, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 14220, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.00176599877886474})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.00100500974804163, 
    'stableTimeIncrement': 4.61439917387452e-08, 
    'stepTime': 0.00100500974804163, 'totalEnergy': 1.93682432174683, 
    'cpuTime': 68.0, 'jobName': 'Job-8200', 'step': 1, 'increment': 17940, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.00475719710811973})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.00117251044139266, 
    'stableTimeIncrement': 3.88197349820985e-08, 
    'stepTime': 0.00117251044139266, 'totalEnergy': 2.51225733757019, 
    'cpuTime': 85.6999969482422, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 21638, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0114017240703106})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.00134004419669509, 
    'stableTimeIncrement': 5.1523343813642e-08, 
    'stepTime': 0.00134004419669509, 'totalEnergy': 3.25766634941101, 
    'cpuTime': 105.199996948242, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 25513, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0202497281134129})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.00150754558853805, 
    'stableTimeIncrement': 5.50955334688297e-08, 
    'stepTime': 0.00150754558853805, 'totalEnergy': 3.75043630599976, 
    'cpuTime': 120.5, 'jobName': 'Job-8200', 'step': 1, 'increment': 28810, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0302434004843235})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.00167504383716732, 
    'stableTimeIncrement': 5.04932557987559e-08, 
    'stepTime': 0.00167504383716732, 'totalEnergy': 4.4893479347229, 
    'cpuTime': 138.300003051758, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 32378, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0347289964556694})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.00184252124745399, 
    'stableTimeIncrement': 3.7629877880363e-08, 
    'stepTime': 0.00184252124745399, 'totalEnergy': 5.0531325340271, 
    'cpuTime': 156.5, 'jobName': 'Job-8200', 'step': 1, 'increment': 36088, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0354309938848019})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-8200'})
mdb.models['Case2'].parts['Die'].features['Shell extrude-1'].setValues(depth=
    0.02)
mdb.models['Case2'].parts['Die'].regenerate()
mdb.models['Case2'].rootAssembly.regenerate()
mdb.models['Case2'].rootAssembly.translate(instanceList=('Die-1', ), vector=(
    0.0, 0.0, -0.01))
mdb.models['Case2'].rootAssembly.setElementType(elemTypes=(ElemType(
    elemCode=R3D4, elemLibrary=STANDARD), ElemType(elemCode=R3D3, 
    elemLibrary=STANDARD)), regions=(
    mdb.models['Case2'].rootAssembly.instances['Die-1'].faces.getSequenceFromMask(
    ('[#3 ]', ), ), ))
mdb.models['Case2'].rootAssembly.generateMesh(regions=(
    mdb.models['Case2'].rootAssembly.instances['Die-1'], ))
mdb.jobs['Job-8200'].submit(consistencyChecking=OFF)
mdb.jobs['Job-8200']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 0, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 1624, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 1 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Boundary conditions are defined at the nodes contained in node set WarnNodeBcIntersectKinCon. In addition the nodes are also part of a surface involved in kinematic contact. The kinematic contact constraint will be overridden by the boundary conditions in case of a conflict. Penalty contact may be used instead.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 7956, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 6.22261921989775e-08, 'stepTime': 0.0, 
    'totalEnergy': 0.0, 'cpuTime': 0.100000001490116, 'jobName': 'Job-8200', 
    'step': 1, 'increment': 0, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.000167509715538472, 
    'stableTimeIncrement': 6.22261921989775e-08, 
    'stepTime': 0.000167509715538472, 'totalEnergy': 0.0, 'cpuTime': 9.5, 
    'jobName': 'Job-8200', 'step': 1, 'increment': 2692, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.000335016695316881, 
    'stableTimeIncrement': 6.22236271397014e-08, 
    'stepTime': 0.000335016695316881, 'totalEnergy': 3.27525208376755e-06, 
    'cpuTime': 18.7999992370605, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 5384, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 4.90475395054091e-05})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.000502503709867597, 
    'stableTimeIncrement': 6.2073603146473e-08, 
    'stepTime': 0.000502503709867597, 'totalEnergy': 0.0559091493487358, 
    'cpuTime': 28.7000007629395, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 8083, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.000122339813970029})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-8200'})
mdb.models['Case3'].parts['Blank'].features['Solid extrude-1'].setValues(depth=
    0.02058)
mdb.models['Case3'].parts['Blank'].regenerate()
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.000670052657369524, 
    'stableTimeIncrement': 5.60905597524197e-08, 
    'stepTime': 0.000670052657369524, 'totalEnergy': 0.411695659160614, 
    'cpuTime': 39.4000015258789, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 10884, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.000547489966265857})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-8200'})
del mdb.models['Case3'].parts['Die']
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.000837517669424415, 
    'stableTimeIncrement': 4.86789026865608e-08, 
    'stepTime': 0.000837517669424415, 'totalEnergy': 1.07873678207397, 
    'cpuTime': 54.2999992370605, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 14212, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.00183630629908293})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-8200'})
mdb.models['Case3'].ConstrainedSketch(name='__profile__', sheetSize=0.1)
mdb.models['Case3'].sketches['__profile__'].sketchOptions.setValues(
    decimalPlaces=3)
mdb.models['Case3'].sketches['__profile__'].ConstructionLine(point1=(0.0, 
    -0.05), point2=(0.0, 0.05))
mdb.models['Case3'].sketches['__profile__'].FixedConstraint(entity=
    mdb.models['Case3'].sketches['__profile__'].geometry[2])
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.00100503070279956, 
    'stableTimeIncrement': 4.28797157780991e-08, 
    'stepTime': 0.00100503070279956, 'totalEnergy': 1.9349023103714, 
    'cpuTime': 72.5999984741211, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 17868, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.00433427002280951})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-8200'})
mdb.models['Case3'].sketches['__profile__'].Spot(point=(0.0, 0.005))
mdb.models['Case3'].sketches['__profile__'].Spot(point=(0.005145, 0.0))
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.00117252301424742, 
    'stableTimeIncrement': 3.85204081965185e-08, 
    'stepTime': 0.00117252301424742, 'totalEnergy': 2.51623201370239, 
    'cpuTime': 91.8000030517578, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 21634, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0111241862177849})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.00134001392871141, 
    'stableTimeIncrement': 5.19072287374911e-08, 
    'stepTime': 0.00134001392871141, 'totalEnergy': 3.24393200874329, 
    'cpuTime': 112.699996948242, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 25487, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0201149433851242})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-8200'})
mdb.models['Case3'].sketches['__profile__'].linearPattern(angle1=0.0, angle2=
    90.0, geomList=(), number1=4, number2=1, spacing1=0.01029, spacing2=0.01, 
    vertexList=(mdb.models['Case3'].sketches['__profile__'].vertices[0], 
    mdb.models['Case3'].sketches['__profile__'].vertices[1]))
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.00150750146713108, 
    'stableTimeIncrement': 5.48881224915476e-08, 
    'stepTime': 0.00150750146713108, 'totalEnergy': 3.74074363708496, 
    'cpuTime': 129.100006103516, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 28775, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0310144759714603})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-8200'})
mdb.models['Case3'].sketches['__profile__'].linearPattern(angle1=180.0, angle2=
    90.0, geomList=(), number1=4, number2=1, spacing1=0.01029, spacing2=0.01, 
    vertexList=(mdb.models['Case3'].sketches['__profile__'].vertices[0], 
    mdb.models['Case3'].sketches['__profile__'].vertices[1]))
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.00167503580451012, 
    'stableTimeIncrement': 5.7527660857204e-08, 
    'stepTime': 0.00167503580451012, 'totalEnergy': 4.42628240585327, 
    'cpuTime': 148.600006103516, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 32368, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0354152731597424})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-8200'})
mdb.models['Case3'].sketches['__profile__'].Spline(points=((-0.03087, 0.005), (
    -0.025725, 0.0), (-0.02058, 0.005), (-0.015435, 0.0), (-0.01029, 0.005), (
    -0.005145, 0.0), (0.0, 0.005), (0.005145, 0.0), (0.01029, 0.005), (
    0.015435, 0.0), (0.02058, 0.005), (0.025725, 0.0), (0.03087, 0.005), (
    0.036015, 0.0)))
mdb.models['Case3'].sketches['__profile__'].ConstructionLine(angle=90.0, 
    point1=(0.025725, 0.0))
mdb.models['Case3'].sketches['__profile__'].CoincidentConstraint(addUndoState=
    False, entity1=mdb.models['Case3'].sketches['__profile__'].vertices[5], 
    entity2=mdb.models['Case3'].sketches['__profile__'].geometry[4])
mdb.models['Case3'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Case3'].sketches['__profile__'].geometry[4])
mdb.models['Case3'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Case3'].sketches['__profile__'].geometry[3], point1=(
    -0.0296443141996861, 0.00218668440356851))
mdb.models['Case3'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Case3'].sketches['__profile__'].geometry[5], point1=(
    0.0294482484459877, 0.00400961609557271))
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.00184253521729261, 
    'stableTimeIncrement': 4.34606128862924e-08, 
    'stepTime': 0.00184253521729261, 'totalEnergy': 4.93738555908203, 
    'cpuTime': 167.0, 'jobName': 'Job-8200', 'step': 1, 'increment': 35747, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0369438827037811})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-8200'})
mdb.models['Case3'].sketches['__profile__'].Line(point1=(0.025725, 0.0), 
    point2=(0.05, 0.0))
mdb.models['Case3'].sketches['__profile__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Case3'].sketches['__profile__'].geometry[7])
mdb.models['Case3'].sketches['__profile__'].sketchOptions.setValues(
    constructionGeometry=ON)
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.00201001740060747, 
    'stableTimeIncrement': 3.72697819273071e-08, 
    'stepTime': 0.00201001740060747, 'totalEnergy': 5.83757972717285, 
    'cpuTime': 187.800003051758, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 39661, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0420791208744049})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Job-8200'})
mdb.models['Case3'].sketches['__profile__'].assignCenterline(line=
    mdb.models['Case3'].sketches['__profile__'].geometry[2])
mdb.models['Case3'].Part(dimensionality=THREE_D, name='Die', type=
    DISCRETE_RIGID_SURFACE)
mdb.models['Case3'].parts['Die'].BaseShellRevolve(angle=90.0, 
    flipRevolveDirection=OFF, sketch=
    mdb.models['Case3'].sketches['__profile__'])
del mdb.models['Case3'].sketches['__profile__']
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.00217752833850682, 
    'stableTimeIncrement': 3.62482275306775e-08, 
    'stepTime': 0.00217752833850682, 'totalEnergy': 6.47397518157959, 
    'cpuTime': 211.0, 'jobName': 'Job-8200', 'step': 1, 'increment': 44068, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0383555851876736})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Job-8200'})
mdb.models['Case3'].parts['Die'].ReferencePoint(point=
    mdb.models['Case3'].parts['Die'].vertices[4])
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.00234501855447888, 
    'stableTimeIncrement': 3.65132315494066e-08, 
    'stepTime': 0.00234501855447888, 'totalEnergy': 7.27731227874756, 
    'cpuTime': 235.800003051758, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 48660, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0350000411272049})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.00251252017915249, 
    'stableTimeIncrement': 3.33448824108018e-08, 
    'stepTime': 0.00251252017915249, 'totalEnergy': 8.63665866851807, 
    'cpuTime': 262.399993896484, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 53441, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.036971990019083})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.00268002459779382, 
    'stableTimeIncrement': 3.01722877793509e-08, 
    'stepTime': 0.00268002459779382, 'totalEnergy': 9.4932861328125, 
    'cpuTime': 289.600006103516, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 58557, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.032880112528801})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.00284751807339489, 
    'stableTimeIncrement': 2.61591637240599e-08, 
    'stepTime': 0.00284751807339489, 'totalEnergy': 10.6749334335327, 
    'cpuTime': 319.700012207031, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 64527, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0271100495010614})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'Job-8200'})
mdb.models['Case3'].rootAssembly.regenerate()
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.00301501946523786, 
    'stableTimeIncrement': 2.43146729417276e-08, 
    'stepTime': 0.00301501946523786, 'totalEnergy': 12.2060775756836, 
    'cpuTime': 355.200012207031, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 71341, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0193195734173059})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 18, 'jobName': 'Job-8200'})
mdb.models['Case3'].steps['Step-1'].setValues(timePeriod=0.0028)
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.00318251131102443, 
    'stableTimeIncrement': 2.29472618684667e-08, 
    'stepTime': 0.00318251131102443, 'totalEnergy': 13.1148881912231, 
    'cpuTime': 390.0, 'jobName': 'Job-8200', 'step': 1, 'increment': 78522, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0119652384892106})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 19, 'jobName': 'Job-8200'})
del mdb.models['Case3'].interactions['Int-1']
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.00334999989718199, 
    'stableTimeIncrement': 2.13287769668113e-08, 
    'stepTime': 0.00334999989718199, 'totalEnergy': 13.5360469818115, 
    'cpuTime': 426.700012207031, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 86172, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.00399020733311772})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 20, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(JOB_COMPLETED, {
    'time': 'Mon Jun 04 13:48:20 2018', 'jobName': 'Job-8200'})
mdb.models['Case3'].SurfaceToSurfaceContactExp(clearanceRegion=None, 
    createStepName='Initial', datumAxis=None, initialClearance=OMIT, 
    interactionProperty='fricless', master=Region(
    side1Faces=mdb.models['Case3'].rootAssembly.instances['Die-1'].faces.getSequenceFromMask(
    mask=('[#3 ]', ), )), mechanicalConstraint=KINEMATIC, name='Int-1', slave=
    Region(
    side1Faces=mdb.models['Case3'].rootAssembly.instances['Blank-1'].faces.getSequenceFromMask(
    mask=('[#36 ]', ), )), sliding=FINITE)
del mdb.models['Case3'].boundaryConditions['Zsymm']
del mdb.models['Case3'].boundaryConditions['Xsymm']
del mdb.models['Case3'].boundaryConditions['Die-fixed']
del mdb.models['Case3'].boundaryConditions['Die-disp']
mdb.models['Case3'].steps['Step-1'].adaptiveMeshDomains['Step-1'].setValues(
    region=Region(
    cells=mdb.models['Case3'].rootAssembly.instances['Blank-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )))
mdb.models['Case3'].DisplacementBC(amplitude=UNSET, createStepName='Initial', 
    distributionType=UNIFORM, fieldName='', localCsys=None, name='BlankY', 
    region=Region(
    faces=mdb.models['Case3'].rootAssembly.instances['Blank-1'].faces.getSequenceFromMask(
    mask=('[#8 ]', ), )), u1=UNSET, u2=SET, u3=UNSET, ur1=UNSET, ur2=UNSET, 
    ur3=UNSET)
mdb.models['Case3'].ZsymmBC(createStepName='Initial', localCsys=None, name=
    'Zsymm', region=Region(
    faces=mdb.models['Case3'].rootAssembly.instances['Blank-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )))
mdb.models['Case3'].XsymmBC(createStepName='Initial', localCsys=None, name=
    'Xsymm', region=Region(
    faces=mdb.models['Case3'].rootAssembly.instances['Blank-1'].faces.getSequenceFromMask(
    mask=('[#1 ]', ), )))
mdb.models['Case3'].DisplacementBC(amplitude=UNSET, createStepName='Initial', 
    distributionType=UNIFORM, fieldName='', localCsys=None, name='DieFix', 
    region=Region(referencePoints=(
    mdb.models['Case3'].rootAssembly.instances['Die-1'].referencePoints[2], )), 
    u1=UNSET, u2=UNSET, u3=SET, ur1=SET, ur2=SET, ur3=SET)
mdb.models['Case3'].DisplacementBC(amplitude='Amp-1', createStepName='Step-1', 
    distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'DieDisp', region=Region(
    faces=mdb.models['Case3'].rootAssembly.instances['Die-1'].faces.getSequenceFromMask(
    mask=('[#3 ]', ), )), u1=UNSET, u2=-0.0056, u3=UNSET, ur1=UNSET, ur2=UNSET, 
    ur3=UNSET)
mdb.models['Case3'].boundaryConditions['DieDisp'].setValues(region=Region(
    referencePoints=(
    mdb.models['Case3'].rootAssembly.instances['Die-1'].referencePoints[2], )))
mdb.models['Case3'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Case3'].rootAssembly.instances['Blank-1'], ), size=0.005)
mdb.models['Case3'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Case3'].rootAssembly.instances['Blank-1'], ), size=0.0005)
mdb.models['Case3'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Case3'].rootAssembly.instances['Blank-1'], ), size=0.001)
mdb.models['Case3'].rootAssembly.deleteSeeds(regions=
    mdb.models['Case3'].rootAssembly.instances['Blank-1'].edges.getSequenceFromMask(
    ('[#f ]', ), ))
mdb.models['Case3'].rootAssembly.seedEdgeBySize(constraint=FINER, 
    deviationFactor=0.1, edges=
    mdb.models['Case3'].rootAssembly.instances['Blank-1'].edges.getSequenceFromMask(
    ('[#285 ]', ), ), minSizeFactor=0.1, size=0.003)
mdb.models['Case3'].rootAssembly.seedEdgeBySize(constraint=FINER, 
    deviationFactor=0.1, edges=
    mdb.models['Case3'].rootAssembly.instances['Blank-1'].edges.getSequenceFromMask(
    ('[#285 ]', ), ), minSizeFactor=0.1, size=0.002)
mdb.models['Case3'].rootAssembly.deleteSeeds(regions=
    mdb.models['Case3'].rootAssembly.instances['Blank-1'].edges.getSequenceFromMask(
    ('[#d08 ]', ), ))
mdb.models['Case3'].rootAssembly.setElementType(elemTypes=(ElemType(
    elemCode=C3D8R, elemLibrary=STANDARD, secondOrderAccuracy=OFF, 
    kinematicSplit=AVERAGE_STRAIN, hourglassControl=DEFAULT, 
    distortionControl=DEFAULT), ElemType(elemCode=C3D6, elemLibrary=STANDARD), 
    ElemType(elemCode=C3D4, elemLibrary=STANDARD)), regions=(
    mdb.models['Case3'].rootAssembly.instances['Blank-1'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), ))
mdb.models['Case3'].rootAssembly.setElementType(elemTypes=(ElemType(
    elemCode=C3D8R, elemLibrary=STANDARD, secondOrderAccuracy=OFF, 
    kinematicSplit=AVERAGE_STRAIN, hourglassControl=DEFAULT, 
    distortionControl=DEFAULT), ElemType(elemCode=C3D6, elemLibrary=STANDARD), 
    ElemType(elemCode=C3D4, elemLibrary=STANDARD)), regions=(
    mdb.models['Case3'].rootAssembly.instances['Blank-1'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), ))
mdb.models['Case3'].rootAssembly.generateMesh(regions=(
    mdb.models['Case3'].rootAssembly.instances['Blank-1'], ))
mdb.models['Case3'].rootAssembly.setElementType(elemTypes=(ElemType(
    elemCode=R3D4, elemLibrary=STANDARD), ElemType(elemCode=R3D3, 
    elemLibrary=STANDARD)), regions=(
    mdb.models['Case3'].rootAssembly.instances['Die-1'].faces.getSequenceFromMask(
    ('[#3 ]', ), ), ))
mdb.models['Case3'].rootAssembly.generateMesh(regions=(
    mdb.models['Case3'].rootAssembly.instances['Die-1'], ))
mdb.models['Case3'].rootAssembly.deleteMesh(regions=(
    mdb.models['Case3'].rootAssembly.instances['Die-1'], ))
mdb.models['Case3'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Case3'].rootAssembly.instances['Die-1'], ), size=0.005)
mdb.models['Case3'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Case3'].rootAssembly.instances['Die-1'], ), size=0.001)
mdb.models['Case3'].rootAssembly.generateMesh(regions=(
    mdb.models['Case3'].rootAssembly.instances['Die-1'], ))
# Save by faezeh on 2018_06_04-13.59.31; build 6.14-1 2014_06_04-15.11.02 134264
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.jobs['Job-8200']
mdb.Job(activateLoadBalancing=False, atTime=None, contactPrint=OFF, 
    description='', echoPrint=OFF, explicitPrecision=SINGLE, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Case3', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-3103', nodalOutputPrecision=SINGLE, 
    numCpus=1, numDomains=1, parallelizationMethodExplicit=DOMAIN, queue=None, 
    resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=
    0, waitMinutes=0)
mdb.jobs['Job-3103'].submit(consistencyChecking=OFF)
mdb.jobs['Job-3103']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 0, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 7236, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 1 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(ERROR, {'phase': PACKAGER_PHASE, 
    'message': 'The rigid bodies with the reference nodes contained in node set ErrNodeRefNodeNoMass have no mass associated with them and some degrees of freedom of the reference node are not restrained. Either mass must be defined or all of the translational degrees of freedom must be constrained. See the status file for further details.', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Boundary conditions are defined at the nodes contained in node set WarnNodeBcIntersectKinCon. In addition the nodes are also part of a surface involved in kinematic contact. The kinematic contact constraint will be overridden by the boundary conditions in case of a conflict. Penalty contact may be used instead.', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(ABORTED, {'phase': PACKAGER_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(ERROR, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-3103'})
mdb.models['Case3'].boundaryConditions['DieFix'].setValues(u1=SET)
mdb.jobs['Job-3103'].submit(consistencyChecking=OFF)
mdb.jobs['Job-3103']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 0, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 6248, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 1 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Boundary conditions are defined at the nodes contained in node set WarnNodeBcIntersectKinCon. In addition the nodes are also part of a surface involved in kinematic contact. The kinematic contact constraint will be overridden by the boundary conditions in case of a conflict. Penalty contact may be used instead.', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 8492, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'Master surface ASSEMBLY__PICKEDSURF53 of contact pair # 1 contains facets with out-of-plane warping of at least 20.000 degrees. Large initial warping is undesirable and should be avoided by refining the mesh.', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.22130188628944e-07, 'stepTime': 0.0, 
    'totalEnergy': 0.0, 'cpuTime': 0.0, 'jobName': 'Job-3103', 'step': 1, 
    'increment': 0, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.000140079835546203, 
    'stableTimeIncrement': 1.22117029377478e-07, 
    'stepTime': 0.000140079835546203, 'totalEnergy': 3.18531169796188e-06, 
    'cpuTime': 1.39999997615814, 'jobName': 'Job-3103', 'step': 1, 
    'increment': 1147, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 6.75575847708387e-07})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.000280015519820154, 
    'stableTimeIncrement': 1.22060782814515e-07, 
    'stepTime': 0.000280015519820154, 'totalEnergy': 2.17013966903323e-05, 
    'cpuTime': 2.70000004768372, 'jobName': 'Job-3103', 'step': 1, 
    'increment': 2293, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 4.11961173085729e-06})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.000420070020481944, 
    'stableTimeIncrement': 1.21930980867546e-07, 
    'stepTime': 0.000420070020481944, 'totalEnergy': 0.00662786886096001, 
    'cpuTime': 4.0, 'jobName': 'Job-3103', 'step': 1, 'increment': 3441, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 6.64632752886973e-05})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.000560082611627877, 
    'stableTimeIncrement': 1.21631202887329e-07, 
    'stepTime': 0.000560082611627877, 'totalEnergy': 0.0767870619893074, 
    'cpuTime': 5.40000009536743, 'jobName': 'Job-3103', 'step': 1, 
    'increment': 4591, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.000366172404028475})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.000700090604368597, 
    'stableTimeIncrement': 1.21542967690402e-07, 
    'stepTime': 0.000700090604368597, 'totalEnergy': 0.426723778247833, 
    'cpuTime': 6.90000009536743, 'jobName': 'Job-3103', 'step': 1, 
    'increment': 5745, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.00127577874809504})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.000840057153254747, 
    'stableTimeIncrement': 1.11268526836739e-07, 
    'stepTime': 0.000840057153254747, 'totalEnergy': 1.27636337280273, 
    'cpuTime': 8.5, 'jobName': 'Job-3103', 'step': 1, 'increment': 6909, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0609696432948112})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.000980005133897066, 
    'stableTimeIncrement': 1.05781545300943e-07, 
    'stepTime': 0.000980005133897066, 'totalEnergy': 2.30165529251099, 
    'cpuTime': 10.3000001907349, 'jobName': 'Job-3103', 'step': 1, 
    'increment': 8140, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.00825517997145653})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.00112004205584526, 
    'stableTimeIncrement': 5.49147038952924e-08, 
    'stepTime': 0.00112004205584526, 'totalEnergy': 10.0040493011475, 
    'cpuTime': 12.6999998092651, 'jobName': 'Job-3103', 'step': 1, 
    'increment': 9592, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0183586627244949})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'The elements contained in element set ErrElemExcessDistortion-Step1 have distorted excessively.', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'The elements in element set ErrElemZeroALEMass-Step1 have zero or negative mass.', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'There are a total of 7 excessively distorted elements', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.00114534434396774, 
    'stableTimeIncrement': 9.9999998245167e-15, 
    'stepTime': 0.00114534434396774, 'totalEnergy': -551.765441894531, 
    'cpuTime': 13.5, 'jobName': 'Job-3103', 'step': 1, 'increment': 10111, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 183.374359130859})
mdb.jobs['Job-3103']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'The elements contained in element set ErrElemExcessDistortion-Step1 have distorted excessively.', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(ABORTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-3103'})
mdb.models['Case3'].adaptiveMeshControls['Ada-1'].setValues(
    laplacianSmoothingWeight=0.2, volumetricSmoothingWeight=0.8)
mdb.jobs['Job-3103'].submit(consistencyChecking=OFF)
mdb.jobs['Job-3103']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 0, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 9544, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 1 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Boundary conditions are defined at the nodes contained in node set WarnNodeBcIntersectKinCon. In addition the nodes are also part of a surface involved in kinematic contact. The kinematic contact constraint will be overridden by the boundary conditions in case of a conflict. Penalty contact may be used instead.', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 8904, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'Master surface ASSEMBLY__PICKEDSURF53 of contact pair # 1 contains facets with out-of-plane warping of at least 20.000 degrees. Large initial warping is undesirable and should be avoided by refining the mesh.', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.22130188628944e-07, 'stepTime': 0.0, 
    'totalEnergy': 0.0, 'cpuTime': 0.100000001490116, 'jobName': 'Job-3103', 
    'step': 1, 'increment': 0, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.000140079835546203, 
    'stableTimeIncrement': 1.22117029377478e-07, 
    'stepTime': 0.000140079835546203, 'totalEnergy': 3.18531169796188e-06, 
    'cpuTime': 1.39999997615814, 'jobName': 'Job-3103', 'step': 1, 
    'increment': 1147, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 6.75575847708387e-07})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.000280015519820154, 
    'stableTimeIncrement': 1.22060782814515e-07, 
    'stepTime': 0.000280015519820154, 'totalEnergy': 2.17013966903323e-05, 
    'cpuTime': 2.70000004768372, 'jobName': 'Job-3103', 'step': 1, 
    'increment': 2293, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 4.11961173085729e-06})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.000420072232373059, 
    'stableTimeIncrement': 1.21935528341055e-07, 
    'stepTime': 0.000420072232373059, 'totalEnergy': 0.00654933042824268, 
    'cpuTime': 4.0, 'jobName': 'Job-3103', 'step': 1, 'increment': 3441, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 7.19260715413839e-05})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.000560116430278867, 
    'stableTimeIncrement': 1.21637242500583e-07, 
    'stepTime': 0.000560116430278867, 'totalEnergy': 0.0779610946774483, 
    'cpuTime': 5.5, 'jobName': 'Job-3103', 'step': 1, 'increment': 4591, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.000370864407159388})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.00070002389838919, 
    'stableTimeIncrement': 1.21275917308594e-07, 
    'stepTime': 0.00070002389838919, 'totalEnergy': 0.428868025541306, 
    'cpuTime': 7.0, 'jobName': 'Job-3103', 'step': 1, 'increment': 5746, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.00129811652004719})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.000840001623146236, 
    'stableTimeIncrement': 1.20856810781333e-07, 
    'stepTime': 0.000840001623146236, 'totalEnergy': 1.08056581020355, 
    'cpuTime': 8.60000038146973, 'jobName': 'Job-3103', 'step': 1, 
    'increment': 6906, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.00383695214986801})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.000980111537501216, 
    'stableTimeIncrement': 1.15729925198593e-07, 
    'stepTime': 0.000980111537501216, 'totalEnergy': 2.33612036705017, 
    'cpuTime': 10.3999996185303, 'jobName': 'Job-3103', 'step': 1, 
    'increment': 8137, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.00784764252603054})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.00112001516390592, 
    'stableTimeIncrement': 5.31390149660638e-08, 
    'stepTime': 0.00112001516390592, 'totalEnergy': 8.84989261627197, 
    'cpuTime': 12.8999996185303, 'jobName': 'Job-3103', 'step': 1, 
    'increment': 9649, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0162559784948826})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.00126000901218504, 
    'stableTimeIncrement': 2.56889745031685e-08, 
    'stepTime': 0.00126000901218504, 'totalEnergy': 59.5634765625, 
    'cpuTime': 18.5, 'jobName': 'Job-3103', 'step': 1, 'increment': 13138, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0199865251779556})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'The elements in element set ErrElemZeroALEMass-Step1 have zero or negative mass.', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.001285859500058, 
    'stableTimeIncrement': 9.9999998245167e-15, 'stepTime': 0.001285859500058, 
    'totalEnergy': 3.40282346638529e+38, 'cpuTime': 20.3999996185303, 
    'jobName': 'Job-3103', 'step': 1, 'increment': 14391, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 3.40282346638529e+38})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(ABORTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-3103'})
mdb.models['Case3'].parts['Die'].features['Shell revolve-1'].setValues(angle=
    91.0)
mdb.models['Case3'].parts['Die'].regenerate()
mdb.models['Case3'].parts['Die'].regenerate()
mdb.models['Case3'].rootAssembly.regenerate()
mdb.jobs['Job-3103'].submit(consistencyChecking=OFF)
mdb.jobs['Job-3103']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 0, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 1180, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 1 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Boundary conditions are defined at the nodes contained in node set WarnNodeBcIntersectKinCon. In addition the nodes are also part of a surface involved in kinematic contact. The kinematic contact constraint will be overridden by the boundary conditions in case of a conflict. Penalty contact may be used instead.', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 7192, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'Master surface ASSEMBLY__PICKEDSURF53 of contact pair # 1 contains facets with out-of-plane warping of at least 20.000 degrees. Large initial warping is undesirable and should be avoided by refining the mesh.', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.22130188628944e-07, 'stepTime': 0.0, 
    'totalEnergy': 0.0, 'cpuTime': 0.100000001490116, 'jobName': 'Job-3103', 
    'step': 1, 'increment': 0, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.000140079835546203, 
    'stableTimeIncrement': 1.22117029377478e-07, 
    'stepTime': 0.000140079835546203, 'totalEnergy': 3.18531169796188e-06, 
    'cpuTime': 1.39999997615814, 'jobName': 'Job-3103', 'step': 1, 
    'increment': 1147, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 6.75575847708387e-07})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.000280015519820154, 
    'stableTimeIncrement': 1.22060782814515e-07, 
    'stepTime': 0.000280015519820154, 'totalEnergy': 2.17013966903323e-05, 
    'cpuTime': 2.70000004768372, 'jobName': 'Job-3103', 'step': 1, 
    'increment': 2293, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 4.11961173085729e-06})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.000420072232373059, 
    'stableTimeIncrement': 1.21935528341055e-07, 
    'stepTime': 0.000420072232373059, 'totalEnergy': 0.00654933042824268, 
    'cpuTime': 4.0, 'jobName': 'Job-3103', 'step': 1, 'increment': 3441, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 7.19260715413839e-05})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.000560116430278867, 
    'stableTimeIncrement': 1.21637242500583e-07, 
    'stepTime': 0.000560116430278867, 'totalEnergy': 0.0779610946774483, 
    'cpuTime': 5.30000019073486, 'jobName': 'Job-3103', 'step': 1, 
    'increment': 4591, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.000370864407159388})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.00070002389838919, 
    'stableTimeIncrement': 1.21275917308594e-07, 
    'stepTime': 0.00070002389838919, 'totalEnergy': 0.428868025541306, 
    'cpuTime': 6.80000019073486, 'jobName': 'Job-3103', 'step': 1, 
    'increment': 5746, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.00129811652004719})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.000840001623146236, 
    'stableTimeIncrement': 1.20856810781333e-07, 
    'stepTime': 0.000840001623146236, 'totalEnergy': 1.08056581020355, 
    'cpuTime': 8.39999961853027, 'jobName': 'Job-3103', 'step': 1, 
    'increment': 6906, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.00383695214986801})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.000980111537501216, 
    'stableTimeIncrement': 1.15729925198593e-07, 
    'stepTime': 0.000980111537501216, 'totalEnergy': 2.33612036705017, 
    'cpuTime': 10.1999998092651, 'jobName': 'Job-3103', 'step': 1, 
    'increment': 8137, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.00784764252603054})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.00112001516390592, 
    'stableTimeIncrement': 5.31390149660638e-08, 
    'stepTime': 0.00112001516390592, 'totalEnergy': 8.84989261627197, 
    'cpuTime': 12.6000003814697, 'jobName': 'Job-3103', 'step': 1, 
    'increment': 9649, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0162559784948826})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.00126000901218504, 
    'stableTimeIncrement': 2.56889745031685e-08, 
    'stepTime': 0.00126000901218504, 'totalEnergy': 59.5634765625, 
    'cpuTime': 18.1000003814697, 'jobName': 'Job-3103', 'step': 1, 
    'increment': 13138, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0199865251779556})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'The elements in element set ErrElemZeroALEMass-Step1 have zero or negative mass.', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.001285859500058, 
    'stableTimeIncrement': 9.9999998245167e-15, 'stepTime': 0.001285859500058, 
    'totalEnergy': 3.40282346638529e+38, 'cpuTime': 20.0, 
    'jobName': 'Job-3103', 'step': 1, 'increment': 14391, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 3.40282346638529e+38})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(ABORTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-3103'})
mdb.models['Case3'].adaptiveMeshControls['Ada-1'].setValues(
    laplacianSmoothingWeight=0.0, volumetricSmoothingWeight=1.0)
mdb.jobs['Job-3103'].submit(consistencyChecking=OFF)
mdb.jobs['Job-3103']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 0, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 980, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 1 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Boundary conditions are defined at the nodes contained in node set WarnNodeBcIntersectKinCon. In addition the nodes are also part of a surface involved in kinematic contact. The kinematic contact constraint will be overridden by the boundary conditions in case of a conflict. Penalty contact may be used instead.', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 7520, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'Master surface ASSEMBLY__PICKEDSURF53 of contact pair # 1 contains facets with out-of-plane warping of at least 20.000 degrees. Large initial warping is undesirable and should be avoided by refining the mesh.', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.22130188628944e-07, 'stepTime': 0.0, 
    'totalEnergy': 0.0, 'cpuTime': 0.0, 'jobName': 'Job-3103', 'step': 1, 
    'increment': 0, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.000140079835546203, 
    'stableTimeIncrement': 1.22117029377478e-07, 
    'stepTime': 0.000140079835546203, 'totalEnergy': 3.18531169796188e-06, 
    'cpuTime': 1.29999995231628, 'jobName': 'Job-3103', 'step': 1, 
    'increment': 1147, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 6.75575847708387e-07})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.000280015519820154, 
    'stableTimeIncrement': 1.22060782814515e-07, 
    'stepTime': 0.000280015519820154, 'totalEnergy': 2.17013966903323e-05, 
    'cpuTime': 2.70000004768372, 'jobName': 'Job-3103', 'step': 1, 
    'increment': 2293, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 4.11961173085729e-06})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.000420070020481944, 
    'stableTimeIncrement': 1.21930980867546e-07, 
    'stepTime': 0.000420070020481944, 'totalEnergy': 0.00662786886096001, 
    'cpuTime': 4.0, 'jobName': 'Job-3103', 'step': 1, 'increment': 3441, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 6.64632752886973e-05})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.000560082611627877, 
    'stableTimeIncrement': 1.21631202887329e-07, 
    'stepTime': 0.000560082611627877, 'totalEnergy': 0.0767870619893074, 
    'cpuTime': 5.40000009536743, 'jobName': 'Job-3103', 'step': 1, 
    'increment': 4591, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.000366172404028475})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.000700090604368597, 
    'stableTimeIncrement': 1.21542967690402e-07, 
    'stepTime': 0.000700090604368597, 'totalEnergy': 0.426723778247833, 
    'cpuTime': 6.90000009536743, 'jobName': 'Job-3103', 'step': 1, 
    'increment': 5745, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.00127577874809504})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.000840057153254747, 
    'stableTimeIncrement': 1.11268526836739e-07, 
    'stepTime': 0.000840057153254747, 'totalEnergy': 1.27636337280273, 
    'cpuTime': 8.5, 'jobName': 'Job-3103', 'step': 1, 'increment': 6909, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0609696432948112})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.000980005133897066, 
    'stableTimeIncrement': 1.05781545300943e-07, 
    'stepTime': 0.000980005133897066, 'totalEnergy': 2.30165529251099, 
    'cpuTime': 10.3000001907349, 'jobName': 'Job-3103', 'step': 1, 
    'increment': 8140, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.00825517997145653})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.00112004205584526, 
    'stableTimeIncrement': 5.49147038952924e-08, 
    'stepTime': 0.00112004205584526, 'totalEnergy': 10.0040493011475, 
    'cpuTime': 12.6999998092651, 'jobName': 'Job-3103', 'step': 1, 
    'increment': 9592, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0183586627244949})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'The elements contained in element set ErrElemExcessDistortion-Step1 have distorted excessively.', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'The elements in element set ErrElemZeroALEMass-Step1 have zero or negative mass.', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'There are a total of 7 excessively distorted elements', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.00114534434396774, 
    'stableTimeIncrement': 9.9999998245167e-15, 
    'stepTime': 0.00114534434396774, 'totalEnergy': -551.765441894531, 
    'cpuTime': 13.5, 'jobName': 'Job-3103', 'step': 1, 'increment': 10111, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 183.374359130859})
mdb.jobs['Job-3103']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'The elements contained in element set ErrElemExcessDistortion-Step1 have distorted excessively.', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(ABORTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-3103'})
mdb.models['Case3'].rootAssembly.rotate(angle=-0.5, axisDirection=(0.0, -0.01, 
    0.0), axisPoint=(0.0, 0.01, 0.0), instanceList=('Die-1', ))
mdb.jobs['Job-3103'].submit(consistencyChecking=OFF)
mdb.jobs['Job-3103']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 0, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 3908, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 1 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Boundary conditions are defined at the nodes contained in node set WarnNodeBcIntersectKinCon. In addition the nodes are also part of a surface involved in kinematic contact. The kinematic contact constraint will be overridden by the boundary conditions in case of a conflict. Penalty contact may be used instead.', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 4812, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'Master surface ASSEMBLY__PICKEDSURF53 of contact pair # 1 contains facets with out-of-plane warping of at least 20.000 degrees. Large initial warping is undesirable and should be avoided by refining the mesh.', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.22130188628944e-07, 'stepTime': 0.0, 
    'totalEnergy': 0.0, 'cpuTime': 0.0, 'jobName': 'Job-3103', 'step': 1, 
    'increment': 0, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.000140079646371305, 
    'stableTimeIncrement': 1.22112894018755e-07, 
    'stepTime': 0.000140079646371305, 'totalEnergy': 3.46279193763621e-06, 
    'cpuTime': 1.29999995231628, 'jobName': 'Job-3103', 'step': 1, 
    'increment': 1147, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 6.23315884240583e-07})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.000280107429716736, 
    'stableTimeIncrement': 1.22067703500761e-07, 
    'stepTime': 0.000280107429716736, 'totalEnergy': 2.17064607568318e-05, 
    'cpuTime': 2.59999990463257, 'jobName': 'Job-3103', 'step': 1, 
    'increment': 2294, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 2.2473897843156e-05})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.000420035677962005, 
    'stableTimeIncrement': 1.21929417673528e-07, 
    'stepTime': 0.000420035677962005, 'totalEnergy': 0.00534150889143348, 
    'cpuTime': 3.90000009536743, 'jobName': 'Job-3103', 'step': 1, 
    'increment': 3441, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 7.89396945037879e-05})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.000560087442863733, 
    'stableTimeIncrement': 1.21781781103891e-07, 
    'stepTime': 0.000560087442863733, 'totalEnergy': 0.070225328207016, 
    'cpuTime': 5.30000019073486, 'jobName': 'Job-3103', 'step': 1, 
    'increment': 4591, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.000355026888428256})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.000700115051586181, 
    'stableTimeIncrement': 1.21477427228456e-07, 
    'stepTime': 0.000700115051586181, 'totalEnergy': 0.415439367294312, 
    'cpuTime': 6.80000019073486, 'jobName': 'Job-3103', 'step': 1, 
    'increment': 5745, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.00110777688678354})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.000840070657432079, 
    'stableTimeIncrement': 1.17325249959777e-07, 
    'stepTime': 0.000840070657432079, 'totalEnergy': 1.03981125354767, 
    'cpuTime': 8.5, 'jobName': 'Job-3103', 'step': 1, 'increment': 6914, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.00352232088334858})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.000980004435405135, 
    'stableTimeIncrement': 1.16883363432407e-07, 
    'stepTime': 0.000980004435405135, 'totalEnergy': 2.00355076789856, 
    'cpuTime': 10.3000001907349, 'jobName': 'Job-3103', 'step': 1, 
    'increment': 8123, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.00780965853482485})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.00112000270746648, 
    'stableTimeIncrement': 1.08935630294127e-07, 
    'stepTime': 0.00112000270746648, 'totalEnergy': 3.35796499252319, 
    'cpuTime': 12.3000001907349, 'jobName': 'Job-3103', 'step': 1, 
    'increment': 9371, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0148408403620124})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.00126003241166472, 
    'stableTimeIncrement': 9.56917602934482e-08, 
    'stepTime': 0.00126003241166472, 'totalEnergy': 5.01700830459595, 
    'cpuTime': 14.5, 'jobName': 'Job-3103', 'step': 1, 'increment': 10729, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0212628860026598})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.00140005617868155, 
    'stableTimeIncrement': 9.18955080919659e-08, 
    'stepTime': 0.00140005617868155, 'totalEnergy': 7.26018190383911, 
    'cpuTime': 17.1000003814697, 'jobName': 'Job-3103', 'step': 1, 
    'increment': 12194, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.03261474147439})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.0015400085831061, 
    'stableTimeIncrement': 9.10068251869234e-08, 
    'stepTime': 0.0015400085831061, 'totalEnergy': 9.92177486419678, 
    'cpuTime': 20.1000003814697, 'jobName': 'Job-3103', 'step': 1, 
    'increment': 13842, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0406327918171883})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.00168007065076381, 
    'stableTimeIncrement': 7.84736542414066e-08, 
    'stepTime': 0.00168007065076381, 'totalEnergy': 12.3385992050171, 
    'cpuTime': 23.1000003814697, 'jobName': 'Job-3103', 'step': 1, 
    'increment': 15462, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0457959659397602})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.00182003458030522, 
    'stableTimeIncrement': 8.11500271424848e-08, 
    'stepTime': 0.00182003458030522, 'totalEnergy': 14.712329864502, 
    'cpuTime': 26.0, 'jobName': 'Job-3103', 'step': 1, 'increment': 17014, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0537596270442009})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'The elements contained in element set ErrElemExcessDistortion-Step1 have distorted excessively.', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'The elements in element set ErrElemZeroALEMass-Step1 have zero or negative mass.', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'There is only one excessively distorted element', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(STATUS, {'totalTime': 0.0018499493598938, 
    'stableTimeIncrement': 9.9999998245167e-15, 'stepTime': 0.0018499493598938, 
    'totalEnergy': 2.85363221168518, 'cpuTime': 26.7000007629395, 
    'jobName': 'Job-3103', 'step': 1, 'increment': 17381, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 66.4869003295898})
mdb.jobs['Job-3103']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'The elements contained in element set ErrElemExcessDistortion-Step1 have distorted excessively.', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(ABORTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-3103'})
mdb.jobs['Job-3103']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-3103'})
mdb.models['Case3'].rootAssembly.deleteMesh(regions=(
    mdb.models['Case3'].rootAssembly.instances['Blank-1'], ))
mdb.models['Case3'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Case3'].rootAssembly.instances['Blank-1'], ), size=0.0005)
mdb.models['Case3'].rootAssembly.generateMesh(regions=(
    mdb.models['Case3'].rootAssembly.instances['Blank-1'], ))
mdb.models['Case3'].rootAssembly.deleteMesh(regions=
    mdb.models['Case3'].rootAssembly.instances['Blank-1'].cells.getSequenceFromMask(
    ('[#1 ]', ), ))
mdb.models['Case3'].rootAssembly.seedEdgeBySize(constraint=FINER, 
    deviationFactor=0.1, edges=
    mdb.models['Case3'].rootAssembly.instances['Blank-1'].edges.getSequenceFromMask(
    ('[#285 ]', ), ), minSizeFactor=0.1, size=0.0001)
mdb.models['Case3'].rootAssembly.generateMesh(regions=(
    mdb.models['Case3'].rootAssembly.instances['Blank-1'], ))
mdb.models['Case3'].rootAssembly.deleteMesh(regions=
    mdb.models['Case3'].rootAssembly.instances['Blank-1'].cells.getSequenceFromMask(
    ('[#1 ]', ), ))
mdb.models['Case3'].rootAssembly.seedEdgeBySize(constraint=FINER, 
    deviationFactor=0.1, edges=
    mdb.models['Case3'].rootAssembly.instances['Blank-1'].edges.getSequenceFromMask(
    ('[#285 ]', ), ), minSizeFactor=0.1, size=0.00075)
mdb.models['Case3'].rootAssembly.generateMesh(regions=(
    mdb.models['Case3'].rootAssembly.instances['Blank-1'], ))
mdb.Job(activateLoadBalancing=False, atTime=None, contactPrint=OFF, 
    description='', echoPrint=OFF, explicitPrecision=SINGLE, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Case3', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-21853', nodalOutputPrecision=SINGLE, 
    numCpus=1, numDomains=1, parallelizationMethodExplicit=DOMAIN, queue=None, 
    resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=
    0, waitMinutes=0)
mdb.jobs['Job-21853'].submit(consistencyChecking=OFF)
mdb.jobs['Job-21853']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 0, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 7176, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 1 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Boundary conditions are defined at the nodes contained in node set WarnNodeBcIntersectKinCon. In addition the nodes are also part of a surface involved in kinematic contact. The kinematic contact constraint will be overridden by the boundary conditions in case of a conflict. Penalty contact may be used instead.', 
    'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 8424, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'Master surface ASSEMBLY__PICKEDSURF53 of contact pair # 1 contains facets with out-of-plane warping of at least 20.000 degrees. Large initial warping is undesirable and should be avoided by refining the mesh.', 
    'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 6.07577064215548e-08, 'stepTime': 0.0, 
    'totalEnergy': 0.0, 'cpuTime': 0.200000017881393, 'jobName': 'Job-21853', 
    'step': 1, 'increment': 0, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.000140035059303045, 
    'stableTimeIncrement': 6.07435666211131e-08, 
    'stepTime': 0.000140035059303045, 'totalEnergy': 3.77192873202148e-06, 
    'cpuTime': 19.7999992370605, 'jobName': 'Job-21853', 'step': 1, 
    'increment': 2305, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 4.29682017966115e-07})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.000280003092484549, 
    'stableTimeIncrement': 6.06602554853453e-08, 
    'stepTime': 0.000280003092484549, 'totalEnergy': 0.000500561320222914, 
    'cpuTime': 40.3000030517578, 'jobName': 'Job-21853', 'step': 1, 
    'increment': 4610, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 6.24649283054168e-06})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.000420059048337862, 
    'stableTimeIncrement': 6.05166619038755e-08, 
    'stepTime': 0.000420059048337862, 'totalEnergy': 0.0116941230371594, 
    'cpuTime': 60.5, 'jobName': 'Job-21853', 'step': 1, 'increment': 6922, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 7.510872092098e-05})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.000560042099095881, 
    'stableTimeIncrement': 5.85799462271552e-08, 
    'stepTime': 0.000560042099095881, 'totalEnergy': 0.136025950312614, 
    'cpuTime': 81.5, 'jobName': 'Job-21853', 'step': 1, 'increment': 9259, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.000243447488173842})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.000700040312949568, 
    'stableTimeIncrement': 4.87605937848912e-08, 
    'stepTime': 0.000700040312949568, 'totalEnergy': 0.442411631345749, 
    'cpuTime': 105.400001525879, 'jobName': 'Job-21853', 'step': 1, 
    'increment': 11798, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.000628770852927119})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.000840015825815499, 
    'stableTimeIncrement': 4.77667647658109e-08, 
    'stepTime': 0.000840015825815499, 'totalEnergy': 1.14506363868713, 
    'cpuTime': 132.899993896484, 'jobName': 'Job-21853', 'step': 1, 
    'increment': 14461, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.00204027886502445})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.000980006298050284, 
    'stableTimeIncrement': 3.99114021831792e-08, 
    'stepTime': 0.000980006298050284, 'totalEnergy': 2.21275687217712, 
    'cpuTime': 169.199996948242, 'jobName': 'Job-21853', 'step': 1, 
    'increment': 17692, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.00555083435028791})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.00112001702655107, 
    'stableTimeIncrement': 3.33168550525897e-08, 
    'stepTime': 0.00112001702655107, 'totalEnergy': 3.190105676651, 
    'cpuTime': 214.099990844727, 'jobName': 'Job-21853', 'step': 1, 
    'increment': 21666, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0121850138530135})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.00126000109594315, 
    'stableTimeIncrement': 3.68773740433426e-08, 
    'stepTime': 0.00126000109594315, 'totalEnergy': 4.03499889373779, 
    'cpuTime': 255.0, 'jobName': 'Job-21853', 'step': 1, 'increment': 25294, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0227952189743519})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.00140001229010522, 
    'stableTimeIncrement': 2.77737122189592e-08, 
    'stepTime': 0.00140001229010522, 'totalEnergy': 4.961021900177, 
    'cpuTime': 301.799987792969, 'jobName': 'Job-21853', 'step': 1, 
    'increment': 29407, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.032669797539711})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'The elements contained in element set ErrElemExcessDistortion-Step1 have distorted excessively.', 
    'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'The elements in element set ErrElemZeroALEMass-Step1 have zero or negative mass.', 
    'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'There is only one excessively distorted element', 
    'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.00148757116403431, 
    'stableTimeIncrement': 9.9999998245167e-15, 
    'stepTime': 0.00148757116403431, 'totalEnergy': 69.1897735595703, 
    'cpuTime': 341.899993896484, 'jobName': 'Job-21853', 'step': 1, 
    'increment': 32951, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 127.06982421875})
mdb.jobs['Job-21853']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'The elements contained in element set ErrElemExcessDistortion-Step1 have distorted excessively.', 
    'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(ABORTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-21853'})
mdb.models['Case3'].adaptiveMeshControls['Ada-1'].setValues(
    equipotentialSmoothingWeight=0.15, laplacianSmoothingWeight=0.15, 
    volumetricSmoothingWeight=0.7)
mdb.jobs['Job-21853'].submit(consistencyChecking=OFF)
mdb.jobs['Job-21853']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 0, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 1468, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 1 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Boundary conditions are defined at the nodes contained in node set WarnNodeBcIntersectKinCon. In addition the nodes are also part of a surface involved in kinematic contact. The kinematic contact constraint will be overridden by the boundary conditions in case of a conflict. Penalty contact may be used instead.', 
    'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 9104, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'Master surface ASSEMBLY__PICKEDSURF53 of contact pair # 1 contains facets with out-of-plane warping of at least 20.000 degrees. Large initial warping is undesirable and should be avoided by refining the mesh.', 
    'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 6.07577064215548e-08, 'stepTime': 0.0, 
    'totalEnergy': 0.0, 'cpuTime': 0.300000011920929, 'jobName': 'Job-21853', 
    'step': 1, 'increment': 0, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.000140035059303045, 
    'stableTimeIncrement': 6.07435666211131e-08, 
    'stepTime': 0.000140035059303045, 'totalEnergy': 3.77192873202148e-06, 
    'cpuTime': 20.5, 'jobName': 'Job-21853', 'step': 1, 'increment': 2305, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 4.29682017966115e-07})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.000280005275271833, 
    'stableTimeIncrement': 6.07041741318426e-08, 
    'stepTime': 0.000280005275271833, 'totalEnergy': 0.000254092970862985, 
    'cpuTime': 40.5, 'jobName': 'Job-21853', 'step': 1, 'increment': 4610, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 4.49783374278923e-06})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.000420001655584201, 
    'stableTimeIncrement': 6.04766796641343e-08, 
    'stepTime': 0.000420001655584201, 'totalEnergy': 0.0106599228456616, 
    'cpuTime': 61.0, 'jobName': 'Job-21853', 'step': 1, 'increment': 6921, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 6.99260708643124e-05})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.000560001761186868, 
    'stableTimeIncrement': 5.88397384149175e-08, 
    'stepTime': 0.000560001761186868, 'totalEnergy': 0.129128605127335, 
    'cpuTime': 82.5, 'jobName': 'Job-21853', 'step': 1, 'increment': 9260, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.00025562074733898})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.000700032280292362, 
    'stableTimeIncrement': 5.31646335844016e-08, 
    'stepTime': 0.000700032280292362, 'totalEnergy': 0.424287796020508, 
    'cpuTime': 107.099998474121, 'jobName': 'Job-21853', 'step': 1, 
    'increment': 11811, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.00060172873781994})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.00084003689698875, 
    'stableTimeIncrement': 5.06421393708933e-08, 
    'stepTime': 0.00084003689698875, 'totalEnergy': 1.09484076499939, 
    'cpuTime': 134.600006103516, 'jobName': 'Job-21853', 'step': 1, 
    'increment': 14449, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.00219664070755243})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.000980030046775937, 
    'stableTimeIncrement': 4.27390780544101e-08, 
    'stepTime': 0.000980030046775937, 'totalEnergy': 2.1065821647644, 
    'cpuTime': 169.199996948242, 'jobName': 'Job-21853', 'step': 1, 
    'increment': 17509, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.00598233612254262})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.00112002855166793, 
    'stableTimeIncrement': 3.70511372693727e-08, 
    'stepTime': 0.00112002855166793, 'totalEnergy': 3.03603887557983, 
    'cpuTime': 211.699996948242, 'jobName': 'Job-21853', 'step': 1, 
    'increment': 21260, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0131417047232389})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.00126004172489047, 
    'stableTimeIncrement': 4.54089246204603e-08, 
    'stepTime': 0.00126004172489047, 'totalEnergy': 3.80231070518494, 
    'cpuTime': 250.800003051758, 'jobName': 'Job-21853', 'step': 1, 
    'increment': 24697, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0222946833819151})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.00140000053215772, 
    'stableTimeIncrement': 3.00976417122456e-08, 
    'stepTime': 0.00140000053215772, 'totalEnergy': 4.71589088439941, 
    'cpuTime': 295.399993896484, 'jobName': 'Job-21853', 'step': 1, 
    'increment': 28586, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0333131700754166})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'The elements contained in element set ErrElemExcessDistortion-Step1 have distorted excessively.', 
    'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'The elements in element set ErrElemZeroALEMass-Step1 have zero or negative mass.', 
    'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'There is only one excessively distorted element', 
    'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.00141656049527228, 
    'stableTimeIncrement': 9.9999998245167e-15, 
    'stepTime': 0.00141656049527228, 'totalEnergy': 955336286535680.0, 
    'cpuTime': 301.799987792969, 'jobName': 'Job-21853', 'step': 1, 
    'increment': 29141, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 955336286535680.0})
mdb.jobs['Job-21853']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'The elements contained in element set ErrElemExcessDistortion-Step1 have distorted excessively.', 
    'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(ABORTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-21853'})
# Save by faezeh on 2018_06_04-14.32.31; build 6.14-1 2014_06_04-15.11.02 134264
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Case3'].parts['Die'].features['Shell revolve-1'].setValues(angle=
    130.0)
mdb.models['Case3'].parts['Die'].regenerate()
mdb.models['Case3'].rootAssembly.regenerate()
mdb.models['Case3'].rootAssembly.rotate(angle=19.5, axisDirection=(0.0, 0.01, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Die-1', ))
mdb.models['Case3'].rootAssembly.generateMesh(regions=(
    mdb.models['Case3'].rootAssembly.instances['Die-1'], ))
mdb.models['Case3'].rootAssembly.deleteMesh(regions=
    mdb.models['Case3'].rootAssembly.instances['Die-1'].faces.getSequenceFromMask(
    ('[#2 ]', ), ))
mdb.models['Case3'].rootAssembly.setMeshControls(regions=
    mdb.models['Case3'].rootAssembly.instances['Die-1'].faces.getSequenceFromMask(
    ('[#2 ]', ), ), technique=SWEEP)
mdb.models['Case3'].rootAssembly.generateMesh(regions=(
    mdb.models['Case3'].rootAssembly.instances['Die-1'], ))
mdb.jobs['Job-21853'].submit(consistencyChecking=OFF)
mdb.jobs['Job-21853']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 0, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 596, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 1 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Boundary conditions are defined at the nodes contained in node set WarnNodeBcIntersectKinCon. In addition the nodes are also part of a surface involved in kinematic contact. The kinematic contact constraint will be overridden by the boundary conditions in case of a conflict. Penalty contact may be used instead.', 
    'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 6796, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 6.07577064215548e-08, 'stepTime': 0.0, 
    'totalEnergy': 0.0, 'cpuTime': 0.300000011920929, 'jobName': 'Job-21853', 
    'step': 1, 'increment': 0, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.000140035059303045, 
    'stableTimeIncrement': 6.07435666211131e-08, 
    'stepTime': 0.000140035059303045, 'totalEnergy': 3.37896676683158e-06, 
    'cpuTime': 20.7999992370605, 'jobName': 'Job-21853', 'step': 1, 
    'increment': 2305, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 4.20174842474808e-07})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.000280059641227126, 
    'stableTimeIncrement': 6.06844565709252e-08, 
    'stepTime': 0.000280059641227126, 'totalEnergy': 0.000255328457569703, 
    'cpuTime': 41.5, 'jobName': 'Job-21853', 'step': 1, 'increment': 4611, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 4.60356341136503e-06})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.000420032389229164, 
    'stableTimeIncrement': 5.93329687603728e-08, 
    'stepTime': 0.000420032389229164, 'totalEnergy': 0.0167550332844257, 
    'cpuTime': 62.5, 'jobName': 'Job-21853', 'step': 1, 'increment': 6923, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 8.45736576593481e-05})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.000560010666958988, 
    'stableTimeIncrement': 5.99054672534294e-08, 
    'stepTime': 0.000560010666958988, 'totalEnergy': 0.176614448428154, 
    'cpuTime': 84.1999969482422, 'jobName': 'Job-21853', 'step': 1, 
    'increment': 9252, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.000257505918852985})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.000700010103173554, 
    'stableTimeIncrement': 5.90002997569172e-08, 
    'stepTime': 0.000700010103173554, 'totalEnergy': 0.464814245700836, 
    'cpuTime': 107.599998474121, 'jobName': 'Job-21853', 'step': 1, 
    'increment': 11649, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.000623562140390277})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.000840023451019078, 
    'stableTimeIncrement': 5.44106555366852e-08, 
    'stepTime': 0.000840023451019078, 'totalEnergy': 1.22556638717651, 
    'cpuTime': 134.5, 'jobName': 'Job-21853', 'step': 1, 'increment': 14195, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0021720421500504})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.000980006530880928, 
    'stableTimeIncrement': 4.00354274177062e-08, 
    'stepTime': 0.000980006530880928, 'totalEnergy': 2.65397500991821, 
    'cpuTime': 172.0, 'jobName': 'Job-21853', 'step': 1, 'increment': 17362, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.00532442424446344})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.00112002890091389, 
    'stableTimeIncrement': 3.90955001705606e-08, 
    'stepTime': 0.00112002890091389, 'totalEnergy': 3.60129833221436, 
    'cpuTime': 214.5, 'jobName': 'Job-21853', 'step': 1, 'increment': 20995, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0131222195923328})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.00126001855824143, 
    'stableTimeIncrement': 4.2009876466409e-08, 
    'stepTime': 0.00126001855824143, 'totalEnergy': 4.3046703338623, 
    'cpuTime': 253.5, 'jobName': 'Job-21853', 'step': 1, 'increment': 24380, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0238793212920427})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.00140002451371402, 
    'stableTimeIncrement': 3.60880569871824e-08, 
    'stepTime': 0.00140002451371402, 'totalEnergy': 5.18136501312256, 
    'cpuTime': 295.100006103516, 'jobName': 'Job-21853', 'step': 1, 
    'increment': 27973, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.033273559063673})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.00154001684859395, 
    'stableTimeIncrement': 3.46397257544595e-08, 
    'stepTime': 0.00154001684859395, 'totalEnergy': 6.22709703445435, 
    'cpuTime': 339.5, 'jobName': 'Job-21853', 'step': 1, 'increment': 31798, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0435606501996517})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.00168002815917134, 
    'stableTimeIncrement': 3.46021700181609e-08, 
    'stepTime': 0.00168002815917134, 'totalEnergy': 7.36262559890747, 
    'cpuTime': 384.200012207031, 'jobName': 'Job-21853', 'step': 1, 
    'increment': 35600, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0507839880883694})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.00182001083157957, 
    'stableTimeIncrement': 3.59277976258454e-08, 
    'stepTime': 0.00182001083157957, 'totalEnergy': 8.52376270294189, 
    'cpuTime': 430.700012207031, 'jobName': 'Job-21853', 'step': 1, 
    'increment': 39515, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.058486457914114})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.00196000072173774, 
    'stableTimeIncrement': 2.91820398956588e-08, 
    'stepTime': 0.00196000072173774, 'totalEnergy': 9.86232566833496, 
    'cpuTime': 481.799987792969, 'jobName': 'Job-21853', 'step': 1, 
    'increment': 43815, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0635594129562378})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.00210002367384732, 
    'stableTimeIncrement': 2.45007640842232e-08, 
    'stepTime': 0.00210002367384732, 'totalEnergy': 11.5538682937622, 
    'cpuTime': 545.200012207031, 'jobName': 'Job-21853', 'step': 1, 
    'increment': 49011, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0630530342459679})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 
    'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-21853'})
mdb.models['Case3'].boundaryConditions['Zsymm'].setValues(region=Region(
    faces=mdb.models['Case3'].rootAssembly.instances['Blank-1'].faces.getSequenceFromMask(
    mask=('[#30 ]', ), )))
mdb.jobs['Job-21853'].submit(consistencyChecking=OFF)
mdb.jobs['Job-21853']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 0, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 340, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 1 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Boundary conditions are defined at the nodes contained in node set WarnNodeBcIntersectKinCon. In addition the nodes are also part of a surface involved in kinematic contact. The kinematic contact constraint will be overridden by the boundary conditions in case of a conflict. Penalty contact may be used instead.', 
    'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 7704, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 6.07577064215548e-08, 'stepTime': 0.0, 
    'totalEnergy': 0.0, 'cpuTime': 0.300000011920929, 'jobName': 'Job-21853', 
    'step': 1, 'increment': 0, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.000140031101182103, 
    'stableTimeIncrement': 6.07328587420852e-08, 
    'stepTime': 0.000140031101182103, 'totalEnergy': 3.30418924932019e-06, 
    'cpuTime': 20.8999996185303, 'jobName': 'Job-21853', 'step': 1, 
    'increment': 2305, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 4.92065453272517e-07})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.000280007487162948, 
    'stableTimeIncrement': 6.06556724846996e-08, 
    'stepTime': 0.000280007487162948, 'totalEnergy': 0.000542944646440446, 
    'cpuTime': 42.0, 'jobName': 'Job-21853', 'step': 1, 'increment': 4611, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 9.10672861209605e-06})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.000420059775933623, 
    'stableTimeIncrement': 6.04972498763345e-08, 
    'stepTime': 0.000420059775933623, 'totalEnergy': 0.0177663583308458, 
    'cpuTime': 63.0999984741211, 'jobName': 'Job-21853', 'step': 1, 
    'increment': 6926, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 8.51161166792735e-05})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.000560042448341846, 
    'stableTimeIncrement': 5.99509917265095e-08, 
    'stepTime': 0.000560042448341846, 'totalEnergy': 0.184419140219688, 
    'cpuTime': 84.8000030517578, 'jobName': 'Job-21853', 'step': 1, 
    'increment': 9260, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.000294922763714567})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.000700027158018202, 
    'stableTimeIncrement': 5.84830459615659e-08, 
    'stepTime': 0.000700027158018202, 'totalEnergy': 0.499607801437378, 
    'cpuTime': 108.0, 'jobName': 'Job-21853', 'step': 1, 'increment': 11653, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.000646405387669802})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.00084001844516024, 
    'stableTimeIncrement': 4.8374065642065e-08, 
    'stepTime': 0.00084001844516024, 'totalEnergy': 1.44314765930176, 
    'cpuTime': 135.199996948242, 'jobName': 'Job-21853', 'step': 1, 
    'increment': 14236, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.00246355263516307})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.000980003038421273, 
    'stableTimeIncrement': 3.9616292468736e-08, 
    'stepTime': 0.000980003038421273, 'totalEnergy': 3.02268552780151, 
    'cpuTime': 173.399993896484, 'jobName': 'Job-21853', 'step': 1, 
    'increment': 17485, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.00767264608293772})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.00112001795787364, 
    'stableTimeIncrement': 3.87140453028678e-08, 
    'stepTime': 0.00112001795787364, 'totalEnergy': 4.06455326080322, 
    'cpuTime': 214.800003051758, 'jobName': 'Job-21853', 'step': 1, 
    'increment': 21068, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0184277947992086})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.00126003648620099, 
    'stableTimeIncrement': 4.00810478140556e-08, 
    'stepTime': 0.00126003648620099, 'totalEnergy': 4.94940710067749, 
    'cpuTime': 255.300003051758, 'jobName': 'Job-21853', 'step': 1, 
    'increment': 24576, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0313859395682812})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.00140002998523414, 
    'stableTimeIncrement': 3.50919613367751e-08, 
    'stepTime': 0.00140002998523414, 'totalEnergy': 6.12439727783203, 
    'cpuTime': 298.5, 'jobName': 'Job-21853', 'step': 1, 'increment': 28284, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0462913103401661})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.0015400133561343, 
    'stableTimeIncrement': 3.54688935999548e-08, 
    'stepTime': 0.0015400133561343, 'totalEnergy': 7.56094598770142, 
    'cpuTime': 345.0, 'jobName': 'Job-21853', 'step': 1, 'increment': 32225, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0583562217652798})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.00168003304861486, 
    'stableTimeIncrement': 3.7388332430055e-08, 
    'stepTime': 0.00168003304861486, 'totalEnergy': 8.99606227874756, 
    'cpuTime': 391.600006103516, 'jobName': 'Job-21853', 'step': 1, 
    'increment': 36127, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0735434666275978})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.00182000081986189, 
    'stableTimeIncrement': 3.56384681765576e-08, 
    'stepTime': 0.00182000081986189, 'totalEnergy': 10.6856727600098, 
    'cpuTime': 437.899993896484, 'jobName': 'Job-21853', 'step': 1, 
    'increment': 39975, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0858656764030457})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.00196000444702804, 
    'stableTimeIncrement': 2.59366697008545e-08, 
    'stepTime': 0.00196000444702804, 'totalEnergy': 12.6560010910034, 
    'cpuTime': 491.600006103516, 'jobName': 'Job-21853', 'step': 1, 
    'increment': 44427, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0950874611735344})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.0021000113338232, 
    'stableTimeIncrement': 1.75922298950582e-08, 
    'stepTime': 0.0021000113338232, 'totalEnergy': 15.1083879470825, 
    'cpuTime': 570.200012207031, 'jobName': 'Job-21853', 'step': 1, 
    'increment': 50928, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.117155075073242})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.00223642657510936, 
    'stableTimeIncrement': 1.1163286295357e-08, 
    'stepTime': 0.00223642657510936, 'totalEnergy': 17.682638168335, 
    'cpuTime': 690.200012207031, 'jobName': 'Job-21853', 'step': 1, 
    'increment': 60880, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.136773228645325})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.0022400061134249, 
    'stableTimeIncrement': 1.07726521036966e-08, 
    'stepTime': 0.0022400061134249, 'totalEnergy': 17.7776165008545, 
    'cpuTime': 694.099975585938, 'jobName': 'Job-21853', 'step': 1, 
    'increment': 61201, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.13846717774868})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.00231281854212284, 
    'stableTimeIncrement': 5.31659960500974e-09, 
    'stepTime': 0.00231281854212284, 'totalEnergy': 20.1719932556152, 
    'cpuTime': 814.0, 'jobName': 'Job-21853', 'step': 1, 'increment': 71409, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.154444485902786})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.00237200642004609, 
    'stableTimeIncrement': 4.67924987646029e-09, 
    'stepTime': 0.00237200642004609, 'totalEnergy': 22.135440826416, 
    'cpuTime': 934.0, 'jobName': 'Job-21853', 'step': 1, 'increment': 81614, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.168979585170746})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.00237999996170402, 
    'stableTimeIncrement': 4.70347671921445e-09, 
    'stepTime': 0.00237999996170402, 'totalEnergy': 22.500452041626, 
    'cpuTime': 954.400024414063, 'jobName': 'Job-21853', 'step': 1, 
    'increment': 83352, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.168530598282814})
mdb.jobs['Job-21853']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.00242864363826811, 
    'stableTimeIncrement': 4.58167503936124e-09, 
    'stepTime': 0.00242864363826811, 'totalEnergy': 23.9753894805908, 
    'cpuTime': 1074.40002441406, 'jobName': 'Job-21853', 'step': 1, 
    'increment': 93688, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.197414040565491})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.00246253306977451, 
    'stableTimeIncrement': 2.53679499628845e-09, 
    'stepTime': 0.00246253306977451, 'totalEnergy': 25.8916301727295, 
    'cpuTime': 1194.40002441406, 'jobName': 'Job-21853', 'step': 1, 
    'increment': 104003, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.205014139413834})
mdb.jobs['Job-21853']._Message(STATUS, {'totalTime': 0.00248535419814289, 
    'stableTimeIncrement': 1.95901184163461e-09, 
    'stepTime': 0.00248535419814289, 'totalEnergy': 26.9984741210938, 
    'cpuTime': 1314.40002441406, 'jobName': 'Job-21853', 'step': 1, 
    'increment': 114339, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.223498448729515})
mdb.models['Case3'].parts['Die'].features['Shell revolve-1'].setValues(angle=
    92.0)
mdb.models['Case3'].parts['Die'].regenerate()
mdb.models['Case3'].rootAssembly.regenerate()
mdb.jobs['Job-21853']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 
    'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-21853'})
mdb.jobs['Job-21853']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-21853'})
mdb.models['Case3'].rootAssembly.rotate(angle=-20.5, axisDirection=(0.0, 0.01, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Die-1', ))
mdb.models['Case3'].rootAssembly.rotate(angle=1.0, axisDirection=(0.0, 0.01, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Die-1', ))
del mdb.jobs['Job-21853']
mdb.models['Case3'].rootAssembly.deleteMesh(regions=(
    mdb.models['Case3'].rootAssembly.instances['Blank-1'], ))
mdb.models['Case3'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Case3'].rootAssembly.instances['Blank-1'], ), size=0.001)
mdb.models['Case3'].rootAssembly.seedEdgeBySize(constraint=FINER, 
    deviationFactor=0.1, edges=
    mdb.models['Case3'].rootAssembly.instances['Blank-1'].edges.getSequenceFromMask(
    ('[#285 ]', ), ), minSizeFactor=0.1, size=0.002)
mdb.models['Case3'].rootAssembly.generateMesh(regions=(
    mdb.models['Case3'].rootAssembly.instances['Blank-1'], ))
mdb.models['Case3'].rootAssembly.generateMesh(regions=(
    mdb.models['Case3'].rootAssembly.instances['Die-1'], ))
mdb.jobs.changeKey(fromName='Job-3103', toName='Job-3840')
mdb.jobs['Job-3840'].submit(consistencyChecking=OFF)
mdb.jobs['Job-3840']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 0, 'jobName': 'Job-3840'})
mdb.jobs['Job-3840']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-3840'})
mdb.jobs['Job-3840']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-3840'})
mdb.jobs['Job-3840']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 4240, 'jobName': 'Job-3840'})
mdb.jobs['Job-3840']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 1 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-3840'})
mdb.jobs['Job-3840']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Boundary conditions are defined at the nodes contained in node set WarnNodeBcIntersectKinCon. In addition the nodes are also part of a surface involved in kinematic contact. The kinematic contact constraint will be overridden by the boundary conditions in case of a conflict. Penalty contact may be used instead.', 
    'jobName': 'Job-3840'})
mdb.jobs['Job-3840']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-3840'})
mdb.jobs['Job-3840']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 3560, 'jobName': 'Job-3840'})
mdb.jobs['Job-3840']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.22130188628944e-07, 'stepTime': 0.0, 
    'totalEnergy': 0.0, 'cpuTime': 0.0, 'jobName': 'Job-3840', 'step': 1, 
    'increment': 0, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0})
mdb.jobs['Job-3840']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-3840'})
mdb.jobs['Job-3840']._Message(STATUS, {'totalTime': 0.000140077390824445, 
    'stableTimeIncrement': 1.22107834954477e-07, 
    'stepTime': 0.000140077390824445, 'totalEnergy': 2.97429210149858e-06, 
    'cpuTime': 1.39999997615814, 'jobName': 'Job-3840', 'step': 1, 
    'increment': 1147, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 7.09573953372455e-07})
mdb.jobs['Job-3840']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-3840'})
mdb.jobs['Job-3840']._Message(STATUS, {'totalTime': 0.000280101754469797, 
    'stableTimeIncrement': 1.22049726769546e-07, 
    'stepTime': 0.000280101754469797, 'totalEnergy': 2.41258912865305e-05, 
    'cpuTime': 2.79999995231628, 'jobName': 'Job-3840', 'step': 1, 
    'increment': 2294, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 6.10162078373833e-06})
mdb.jobs['Job-3840']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-3840'})
mdb.jobs['Job-3840']._Message(STATUS, {'totalTime': 0.000420096854213625, 
    'stableTimeIncrement': 1.21734018421193e-07, 
    'stepTime': 0.000420096854213625, 'totalEnergy': 0.0108751635998487, 
    'cpuTime': 4.19999980926514, 'jobName': 'Job-3840', 'step': 1, 
    'increment': 3442, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 9.71901099546812e-05})
mdb.jobs['Job-3840']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-3840'})
mdb.jobs['Job-3840']._Message(STATUS, {'totalTime': 0.000560049840714782, 
    'stableTimeIncrement': 1.21696928090387e-07, 
    'stepTime': 0.000560049840714782, 'totalEnergy': 0.101277858018875, 
    'cpuTime': 5.59999990463257, 'jobName': 'Job-3840', 'step': 1, 
    'increment': 4592, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.000371038011508062})
mdb.jobs['Job-3840']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-3840'})
mdb.jobs['Job-3840']._Message(STATUS, {'totalTime': 0.000700069649610668, 
    'stableTimeIncrement': 1.21514673878664e-07, 
    'stepTime': 0.000700069649610668, 'totalEnergy': 0.484532982110977, 
    'cpuTime': 7.19999980926514, 'jobName': 'Job-3840', 'step': 1, 
    'increment': 5745, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0015832589706406})
mdb.jobs['Job-3840']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-3840'})
mdb.jobs['Job-3840']._Message(STATUS, {'totalTime': 0.000840117514599115, 
    'stableTimeIncrement': 1.19225276762336e-07, 
    'stepTime': 0.000840117514599115, 'totalEnergy': 1.16844701766968, 
    'cpuTime': 8.89999961853027, 'jobName': 'Job-3840', 'step': 1, 
    'increment': 6909, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0046997657045722})
mdb.jobs['Job-3840']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-3840'})
mdb.jobs['Job-3840']._Message(STATUS, {'totalTime': 0.000980103854089975, 
    'stableTimeIncrement': 1.13161149783991e-07, 
    'stepTime': 0.000980103854089975, 'totalEnergy': 2.32874608039856, 
    'cpuTime': 10.8000001907349, 'jobName': 'Job-3840', 'step': 1, 
    'increment': 8135, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.00965891685336828})
mdb.jobs['Job-3840']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-3840'})
mdb.jobs['Job-3840']._Message(STATUS, {'totalTime': 0.00112000550143421, 
    'stableTimeIncrement': 1.02852823147259e-07, 
    'stepTime': 0.00112000550143421, 'totalEnergy': 4.19567060470581, 
    'cpuTime': 13.0, 'jobName': 'Job-3840', 'step': 1, 'increment': 9463, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0183731783181429})
mdb.jobs['Job-3840']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-3840'})
mdb.jobs['Job-3840']._Message(STATUS, {'totalTime': 0.00126007723156363, 
    'stableTimeIncrement': 8.39131288898898e-08, 
    'stepTime': 0.00126007723156363, 'totalEnergy': 6.84817552566528, 
    'cpuTime': 15.8000001907349, 'jobName': 'Job-3840', 'step': 1, 
    'increment': 11010, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0307320132851601})
mdb.jobs['Job-3840']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-3840'})
mdb.jobs['Job-3840']._Message(STATUS, {'totalTime': 0.00140000355895609, 
    'stableTimeIncrement': 8.07861439966473e-08, 
    'stepTime': 0.00140000355895609, 'totalEnergy': 9.50990772247314, 
    'cpuTime': 19.1000003814697, 'jobName': 'Job-3840', 'step': 1, 
    'increment': 12766, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0388752855360508})
mdb.jobs['Job-3840']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-3840'})
mdb.jobs['Job-3840']._Message(STATUS, {'totalTime': 0.00154000625479966, 
    'stableTimeIncrement': 7.67965602221921e-08, 
    'stepTime': 0.00154000625479966, 'totalEnergy': 12.2610006332397, 
    'cpuTime': 22.2000007629395, 'jobName': 'Job-3840', 'step': 1, 
    'increment': 14404, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0541750267148018})
mdb.jobs['Job-3840']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-3840'})
mdb.jobs['Job-3840']._Message(STATUS, {'totalTime': 0.00168002804275602, 
    'stableTimeIncrement': 8.35411881894288e-08, 
    'stepTime': 0.00168002804275602, 'totalEnergy': 15.8746519088745, 
    'cpuTime': 25.2999992370605, 'jobName': 'Job-3840', 'step': 1, 
    'increment': 16014, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0690814927220345})
mdb.jobs['Job-3840']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Job-3840'})
mdb.jobs['Job-3840']._Message(STATUS, {'totalTime': 0.00182000105269253, 
    'stableTimeIncrement': 8.78772823398322e-08, 
    'stepTime': 0.00182000105269253, 'totalEnergy': 19.0080738067627, 
    'cpuTime': 28.3999996185303, 'jobName': 'Job-3840', 'step': 1, 
    'increment': 17636, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0802436992526054})
mdb.jobs['Job-3840']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Job-3840'})
mdb.jobs['Job-3840']._Message(STATUS, {'totalTime': 0.0019600682426244, 
    'stableTimeIncrement': 8.11766653896484e-08, 
    'stepTime': 0.0019600682426244, 'totalEnergy': 22.2213153839111, 
    'cpuTime': 31.7999992370605, 'jobName': 'Job-3840', 'step': 1, 
    'increment': 19304, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0957241356372833})
mdb.jobs['Job-3840']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Job-3840'})
mdb.jobs['Job-3840']._Message(STATUS, {'totalTime': 0.0021000555716455, 
    'stableTimeIncrement': 7.64388801144378e-08, 
    'stepTime': 0.0021000555716455, 'totalEnergy': 27.0707397460938, 
    'cpuTime': 35.2999992370605, 'jobName': 'Job-3840', 'step': 1, 
    'increment': 21061, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.10335448384285})
mdb.jobs['Job-3840']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Job-3840'})
mdb.jobs['Job-3840']._Message(STATUS, {'totalTime': 0.00224004592746496, 
    'stableTimeIncrement': 6.92083261810694e-08, 
    'stepTime': 0.00224004592746496, 'totalEnergy': 33.115650177002, 
    'cpuTime': 39.2000007629395, 'jobName': 'Job-3840', 'step': 1, 
    'increment': 22938, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.124505721032619})
mdb.jobs['Job-3840']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'Job-3840'})
mdb.jobs['Job-3840']._Message(STATUS, {'totalTime': 0.00238001276738942, 
    'stableTimeIncrement': 5.13431572812806e-08, 
    'stepTime': 0.00238001276738942, 'totalEnergy': 43.4049606323242, 
    'cpuTime': 43.7000007629395, 'jobName': 'Job-3840', 'step': 1, 
    'increment': 25130, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.180612340569496})
mdb.jobs['Job-3840']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'Job-3840'})
mdb.jobs['Job-3840']._Message(STATUS, {'totalTime': 0.00252002640627325, 
    'stableTimeIncrement': 2.70976716620908e-08, 
    'stepTime': 0.00252002640627325, 'totalEnergy': 60.5133438110352, 
    'cpuTime': 51.4000015258789, 'jobName': 'Job-3840', 'step': 1, 
    'increment': 28945, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.310842514038086})
mdb.jobs['Job-3840']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 18, 'jobName': 'Job-3840'})
mdb.jobs['Job-3840']._Message(STATUS, {'totalTime': 0.00266000139527023, 
    'stableTimeIncrement': 5.35094901721322e-09, 
    'stepTime': 0.00266000139527023, 'totalEnergy': 102.225997924805, 
    'cpuTime': 79.1999969482422, 'jobName': 'Job-3840', 'step': 1, 
    'increment': 44326, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.597664833068848})
mdb.jobs['Job-3840']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 19, 'jobName': 'Job-3840'})
mdb.jobs['Job-3840']._Message(STATUS, {'totalTime': 0.00279999990016222, 
    'stableTimeIncrement': 1.40891209809979e-08, 
    'stepTime': 0.00279999990016222, 'totalEnergy': 290.3984375, 
    'cpuTime': 115.099998474121, 'jobName': 'Job-3840', 'step': 1, 
    'increment': 64727, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.419345527887344})
mdb.jobs['Job-3840']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 20, 'jobName': 'Job-3840'})
mdb.jobs['Job-3840']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-3840'})
mdb.jobs['Job-3840']._Message(JOB_COMPLETED, {
    'time': 'Tue Jun 05 01:50:25 2018', 'jobName': 'Job-3840'})
mdb.models['Case1'].rootAssembly.generateMesh(regions=(
    mdb.models['Case1'].rootAssembly.instances['Blank-1'], ))
mdb.models['Case1'].rootAssembly.generateMesh(regions=(
    mdb.models['Case1'].rootAssembly.instances['Die-1'], 
    mdb.models['Case1'].rootAssembly.instances['Blank-1']))
mdb.Job(activateLoadBalancing=False, atTime=None, contactPrint=OFF, 
    description='', echoPrint=OFF, explicitPrecision=SINGLE, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Case1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-2460', nodalOutputPrecision=SINGLE, 
    numCpus=1, numDomains=1, parallelizationMethodExplicit=DOMAIN, queue=None, 
    resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=
    0, waitMinutes=0)
mdb.jobs['Job-2460'].submit(consistencyChecking=OFF)
mdb.jobs['Job-2460']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 0, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 7312, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 1 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Boundary conditions are defined at the nodes contained in node set WarnNodeBcIntersectKinCon. In addition the nodes are also part of a surface involved in kinematic contact. The kinematic contact constraint will be overridden by the boundary conditions in case of a conflict. Penalty contact may be used instead.', 
    'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 5944, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 2.46308555773567e-08, 'stepTime': 0.0, 
    'totalEnergy': 0.0, 'cpuTime': 0.0, 'jobName': 'Job-2460', 'step': 1, 
    'increment': 0, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0})
mdb.jobs['Job-2460']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STATUS, {'totalTime': 0.000190011312952265, 
    'stableTimeIncrement': 2.46308573537135e-08, 
    'stepTime': 0.000190011312952265, 'totalEnergy': 0.0, 
    'cpuTime': 4.09999990463257, 'jobName': 'Job-2460', 'step': 1, 
    'increment': 7714, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0})
mdb.jobs['Job-2460']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STATUS, {'totalTime': 0.000380011450033635, 
    'stableTimeIncrement': 2.46293989647484e-08, 
    'stepTime': 0.000380011450033635, 'totalEnergy': 0.47973421216011, 
    'cpuTime': 8.60000038146973, 'jobName': 'Job-2460', 'step': 1, 
    'increment': 15772, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.00235245889052749})
mdb.jobs['Job-2460']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STATUS, {'totalTime': 0.00057000428205356, 
    'stableTimeIncrement': 1.2827451101316e-08, 
    'stepTime': 0.00057000428205356, 'totalEnergy': 2.60947608947754, 
    'cpuTime': 14.8999996185303, 'jobName': 'Job-2460', 'step': 1, 
    'increment': 26552, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.00292869750410318})
mdb.jobs['Job-2460']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STATUS, {'totalTime': 0.000760008813813329, 
    'stableTimeIncrement': 1.51367007816816e-08, 
    'stepTime': 0.000760008813813329, 'totalEnergy': 6.05489730834961, 
    'cpuTime': 22.2000007629395, 'jobName': 'Job-2460', 'step': 1, 
    'increment': 38810, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0122062843292952})
mdb.jobs['Job-2460']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STATUS, {'totalTime': 0.000950013345573097, 
    'stableTimeIncrement': 1.4909121048845e-08, 
    'stepTime': 0.000950013345573097, 'totalEnergy': 8.738600730896, 
    'cpuTime': 29.7000007629395, 'jobName': 'Job-2460', 'step': 1, 
    'increment': 50513, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0475937053561211})
mdb.jobs['Job-2460']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STATUS, {'totalTime': 0.00114000111352652, 
    'stableTimeIncrement': 1.66061226991587e-08, 
    'stepTime': 0.00114000111352652, 'totalEnergy': 10.5113363265991, 
    'cpuTime': 37.0, 'jobName': 'Job-2460', 'step': 1, 'increment': 61667, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.118220932781696})
mdb.jobs['Job-2460']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STATUS, {'totalTime': 0.00133001839276403, 
    'stableTimeIncrement': 1.95561984384085e-08, 
    'stepTime': 0.00133001839276403, 'totalEnergy': 12.9260101318359, 
    'cpuTime': 43.7999992370605, 'jobName': 'Job-2460', 'step': 1, 
    'increment': 71986, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.185482189059258})
mdb.jobs['Job-2460']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STATUS, {'totalTime': 0.00152001669630408, 
    'stableTimeIncrement': 2.19005134027839e-08, 
    'stepTime': 0.00152001669630408, 'totalEnergy': 14.9013977050781, 
    'cpuTime': 50.5, 'jobName': 'Job-2460', 'step': 1, 'increment': 82126, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.264812469482422})
mdb.jobs['Job-2460']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STATUS, {'totalTime': 0.00171000557020307, 
    'stableTimeIncrement': 1.95537310787586e-08, 
    'stepTime': 0.00171000557020307, 'totalEnergy': 17.1784725189209, 
    'cpuTime': 57.2000007629395, 'jobName': 'Job-2460', 'step': 1, 
    'increment': 92040, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.320005297660828})
mdb.jobs['Job-2460']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STATUS, {'totalTime': 0.00190001528244466, 
    'stableTimeIncrement': 1.57200350514586e-08, 
    'stepTime': 0.00190001528244466, 'totalEnergy': 21.135892868042, 
    'cpuTime': 64.3000030517578, 'jobName': 'Job-2460', 'step': 1, 
    'increment': 102533, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.342827975749969})
mdb.jobs['Job-2460']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STATUS, {'totalTime': 0.00209000566974282, 
    'stableTimeIncrement': 1.47048977439113e-08, 
    'stepTime': 0.00209000566974282, 'totalEnergy': 26.1687564849854, 
    'cpuTime': 72.5999984741211, 'jobName': 'Job-2460', 'step': 1, 
    'increment': 114597, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.390497237443924})
mdb.jobs['Job-2460']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STATUS, {'totalTime': 0.00228000804781914, 
    'stableTimeIncrement': 1.1134844157823e-08, 
    'stepTime': 0.00228000804781914, 'totalEnergy': 35.0476608276367, 
    'cpuTime': 82.6999969482422, 'jobName': 'Job-2460', 'step': 1, 
    'increment': 129132, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.566742241382599})
mdb.jobs['Job-2460']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STATUS, {'totalTime': 0.00247000390663743, 
    'stableTimeIncrement': 9.93923787717677e-09, 
    'stepTime': 0.00247000390663743, 'totalEnergy': 61.8531341552734, 
    'cpuTime': 95.1999969482422, 'jobName': 'Job-2460', 'step': 1, 
    'increment': 146842, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1.30144453048706})
mdb.jobs['Job-2460']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STATUS, {'totalTime': 0.0026600023265928, 
    'stableTimeIncrement': 8.89382256730187e-09, 
    'stepTime': 0.0026600023265928, 'totalEnergy': 88.0882110595703, 
    'cpuTime': 109.800003051758, 'jobName': 'Job-2460', 'step': 1, 
    'increment': 167277, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1.45074820518494})
mdb.jobs['Job-2460']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STATUS, {'totalTime': 0.00285000493749976, 
    'stableTimeIncrement': 7.62979457391566e-09, 
    'stepTime': 0.00285000493749976, 'totalEnergy': 130.997985839844, 
    'cpuTime': 126.900001525879, 'jobName': 'Job-2460', 'step': 1, 
    'increment': 191138, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 1.29857873916626})
mdb.jobs['Job-2460']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STATUS, {'totalTime': 0.0030400010291487, 
    'stableTimeIncrement': 6.7039236384403e-09, 'stepTime': 0.0030400010291487, 
    'totalEnergy': 184.263458251953, 'cpuTime': 145.600006103516, 
    'jobName': 'Job-2460', 'step': 1, 'increment': 217513, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.934256732463837})
mdb.jobs['Job-2460']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STATUS, {'totalTime': 0.00323000224307179, 
    'stableTimeIncrement': 6.4544147804213e-09, 
    'stepTime': 0.00323000224307179, 'totalEnergy': 260.619720458984, 
    'cpuTime': 166.0, 'jobName': 'Job-2460', 'step': 1, 'increment': 246805, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.684396266937256})
mdb.jobs['Job-2460']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STATUS, {'totalTime': 0.00342000275850296, 
    'stableTimeIncrement': 5.74507375006306e-09, 
    'stepTime': 0.00342000275850296, 'totalEnergy': 315.155548095703, 
    'cpuTime': 187.300003051758, 'jobName': 'Job-2460', 'step': 1, 
    'increment': 278461, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.122334770858288})
mdb.jobs['Job-2460']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 18, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STATUS, {'totalTime': 0.00361000560224056, 
    'stableTimeIncrement': 5.73859670893739e-09, 
    'stepTime': 0.00361000560224056, 'totalEnergy': 371.068359375, 
    'cpuTime': 208.100006103516, 'jobName': 'Job-2460', 'step': 1, 
    'increment': 310946, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.407536804676056})
mdb.jobs['Job-2460']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 19, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(STATUS, {'totalTime': 0.00380000006407499, 
    'stableTimeIncrement': 5.77215653052576e-09, 
    'stepTime': 0.00380000006407499, 'totalEnergy': 483.066436767578, 
    'cpuTime': 227.199996948242, 'jobName': 'Job-2460', 'step': 1, 
    'increment': 343583, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.020435580983758})
mdb.jobs['Job-2460']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 20, 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-2460'})
mdb.jobs['Job-2460']._Message(JOB_COMPLETED, {
    'time': 'Tue Jun 05 02:01:26 2018', 'jobName': 'Job-2460'})
mdb.models['Case2'].rootAssembly.generateMesh(regions=(
    mdb.models['Case2'].rootAssembly.instances['Die-1'], 
    mdb.models['Case2'].rootAssembly.instances['Blank-1']))
mdb.Job(activateLoadBalancing=False, atTime=None, contactPrint=OFF, 
    description='', echoPrint=OFF, explicitPrecision=SINGLE, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Case2', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-8200', nodalOutputPrecision=SINGLE, 
    numCpus=1, numDomains=1, parallelizationMethodExplicit=DOMAIN, queue=None, 
    resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=
    0, waitMinutes=0)
mdb.jobs['Job-8200'].submit(consistencyChecking=OFF)
mdb.jobs['Job-8200']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 0, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 1148, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 1 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Boundary conditions are defined at the nodes contained in node set WarnNodeBcIntersectKinCon. In addition the nodes are also part of a surface involved in kinematic contact. The kinematic contact constraint will be overridden by the boundary conditions in case of a conflict. Penalty contact may be used instead.', 
    'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-JF1KQFH', 'handle': 5760, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 6.22261921989775e-08, 'stepTime': 0.0, 
    'totalEnergy': 0.0, 'cpuTime': 0.100000001490116, 'jobName': 'Job-8200', 
    'step': 1, 'increment': 0, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.000167509715538472, 
    'stableTimeIncrement': 6.22261921989775e-08, 
    'stepTime': 0.000167509715538472, 'totalEnergy': 0.0, 'cpuTime': 9.5, 
    'jobName': 'Job-8200', 'step': 1, 'increment': 2692, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.000335016695316881, 
    'stableTimeIncrement': 6.22236271397014e-08, 
    'stepTime': 0.000335016695316881, 'totalEnergy': 3.27525208376755e-06, 
    'cpuTime': 18.8999996185303, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 5384, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 4.90475395054091e-05})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.000502503709867597, 
    'stableTimeIncrement': 6.2073603146473e-08, 
    'stepTime': 0.000502503709867597, 'totalEnergy': 0.0559091493487358, 
    'cpuTime': 28.7999992370605, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 8083, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.000122339813970029})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.000670052657369524, 
    'stableTimeIncrement': 5.60905597524197e-08, 
    'stepTime': 0.000670052657369524, 'totalEnergy': 0.411695659160614, 
    'cpuTime': 39.7999992370605, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 10884, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.000547489966265857})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.000837517669424415, 
    'stableTimeIncrement': 4.86789026865608e-08, 
    'stepTime': 0.000837517669424415, 'totalEnergy': 1.07873678207397, 
    'cpuTime': 54.9000015258789, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 14212, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.00183630629908293})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.00100503070279956, 
    'stableTimeIncrement': 4.28797157780991e-08, 
    'stepTime': 0.00100503070279956, 'totalEnergy': 1.9349023103714, 
    'cpuTime': 73.3000030517578, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 17868, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.00433427002280951})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.00117252301424742, 
    'stableTimeIncrement': 3.85204081965185e-08, 
    'stepTime': 0.00117252301424742, 'totalEnergy': 2.51623201370239, 
    'cpuTime': 92.9000015258789, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 21634, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0111241862177849})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.00134001392871141, 
    'stableTimeIncrement': 5.19072287374911e-08, 
    'stepTime': 0.00134001392871141, 'totalEnergy': 3.24393200874329, 
    'cpuTime': 113.5, 'jobName': 'Job-8200', 'step': 1, 'increment': 25487, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0201149433851242})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.00150750146713108, 
    'stableTimeIncrement': 5.48881224915476e-08, 
    'stepTime': 0.00150750146713108, 'totalEnergy': 3.74074363708496, 
    'cpuTime': 129.899993896484, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 28775, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0310144759714603})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.00167503580451012, 
    'stableTimeIncrement': 5.7527660857204e-08, 
    'stepTime': 0.00167503580451012, 'totalEnergy': 4.42628240585327, 
    'cpuTime': 148.199996948242, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 32368, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0354152731597424})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.00184253521729261, 
    'stableTimeIncrement': 4.34606128862924e-08, 
    'stepTime': 0.00184253521729261, 'totalEnergy': 4.93738555908203, 
    'cpuTime': 165.5, 'jobName': 'Job-8200', 'step': 1, 'increment': 35747, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0369438827037811})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.00201001740060747, 
    'stableTimeIncrement': 3.72697819273071e-08, 
    'stepTime': 0.00201001740060747, 'totalEnergy': 5.83757972717285, 
    'cpuTime': 185.699996948242, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 39661, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0420791208744049})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.00217752833850682, 
    'stableTimeIncrement': 3.62482275306775e-08, 
    'stepTime': 0.00217752833850682, 'totalEnergy': 6.47397518157959, 
    'cpuTime': 208.800003051758, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 44068, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0383555851876736})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.00234501855447888, 
    'stableTimeIncrement': 3.65132315494066e-08, 
    'stepTime': 0.00234501855447888, 'totalEnergy': 7.27731227874756, 
    'cpuTime': 233.600006103516, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 48660, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0350000411272049})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.00251252017915249, 
    'stableTimeIncrement': 3.33448824108018e-08, 
    'stepTime': 0.00251252017915249, 'totalEnergy': 8.63665866851807, 
    'cpuTime': 259.399993896484, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 53441, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.036971990019083})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.00268002459779382, 
    'stableTimeIncrement': 3.01722877793509e-08, 
    'stepTime': 0.00268002459779382, 'totalEnergy': 9.4932861328125, 
    'cpuTime': 286.200012207031, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 58557, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.032880112528801})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.00284751807339489, 
    'stableTimeIncrement': 2.61591637240599e-08, 
    'stepTime': 0.00284751807339489, 'totalEnergy': 10.6749334335327, 
    'cpuTime': 316.700012207031, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 64527, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.0271100495010614})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.00301501946523786, 
    'stableTimeIncrement': 2.43146729417276e-08, 
    'stepTime': 0.00301501946523786, 'totalEnergy': 12.2060775756836, 
    'cpuTime': 351.0, 'jobName': 'Job-8200', 'step': 1, 'increment': 71341, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0193195734173059})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 18, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.00318251131102443, 
    'stableTimeIncrement': 2.29472618684667e-08, 
    'stepTime': 0.00318251131102443, 'totalEnergy': 13.1148881912231, 
    'cpuTime': 386.0, 'jobName': 'Job-8200', 'step': 1, 'increment': 78522, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 0.0119652384892106})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 19, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(STATUS, {'totalTime': 0.00334999989718199, 
    'stableTimeIncrement': 2.13287769668113e-08, 
    'stepTime': 0.00334999989718199, 'totalEnergy': 13.5360469818115, 
    'cpuTime': 422.299987792969, 'jobName': 'Job-8200', 'step': 1, 
    'increment': 86172, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 0.00399020733311772})
mdb.jobs['Job-8200']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 20, 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-8200'})
mdb.jobs['Job-8200']._Message(JOB_COMPLETED, {
    'time': 'Tue Jun 05 02:11:16 2018', 'jobName': 'Job-8200'})
# Save by faezeh on 2018_06_05-02.13.10; build 6.14-1 2014_06_04-15.11.02 134264
